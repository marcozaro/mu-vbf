ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c      written by the UFO converter
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

      SUBROUTINE MP_COUP2()

      IMPLICIT NONE
      INCLUDE 'model_functions.inc'
      REAL*16 MP__PI, MP__ZERO
      PARAMETER (MP__PI=3.1415926535897932384626433832795E0_16)
      PARAMETER (MP__ZERO=0E0_16)
      INCLUDE 'mp_input.inc'
      INCLUDE 'mp_coupl.inc'

      MP__UV_GQQT = MP__MDL_COMPLEXI*MP__MDL_G_UVT_FIN_*MP__G
      MP__UV_TMASS = MP__MDL_TMASS_UV_FIN_
      MP__UVWFCT_G_1 = MP_COND(CMPLX(MP__MDL_MT,KIND=16),CMPLX
     $ (0.000000E+00_16,KIND=16),CMPLX(((MP__MDL_G__EXP__2)/(2.000000E
     $ +00_16*4.800000E+01_16*MP__PI**2))*4.000000E
     $ +00_16*MP__MDL_TF*MP_REGLOG(CMPLX((MP__MDL_MT__EXP__2
     $ /MP__MDL_MU_R__EXP__2),KIND=16)),KIND=16))
      MP__UVWFCT_T_0 = MP_COND(CMPLX(MP__MDL_MT,KIND=16),CMPLX
     $ (0.000000E+00_16,KIND=16),CMPLX(-((MP__MDL_G__EXP__2)/
     $ (2.000000E+00_16*1.600000E+01_16*MP__PI**2))*MP__MDL_CF*
     $ (4.000000E+00_16-3.000000E+00_16*MP_REGLOG(CMPLX(
     $ (MP__MDL_MT__EXP__2/MP__MDL_MU_R__EXP__2),KIND=16))),KIND=16))
      MP__UV_GTTLEW = MP__MDL_COMPLEXI/2.000000E+00_16*MP__G*
     $ (MP__MDL_CONJG__TWCFT_UV_EW_L_FIN_+MP__MDL_TWCFT_UV_EW_L_FIN_)
      MP__UV_GTTREW = MP__MDL_COMPLEXI/2.000000E+00_16*MP__G*
     $ (MP__MDL_CONJG__TWCFT_UV_EW_R_FIN_+MP__MDL_TWCFT_UV_EW_R_FIN_)
      MP__UV_GTTLEW_1EPS = MP__MDL_COMPLEXI/2.000000E+00_16*MP__G*
     $ (MP__MDL_CONJG__TWCFT_UV_EW_L_1EPS_+MP__MDL_TWCFT_UV_EW_L_1EPS_)
      MP__UV_GTTREW_1EPS = MP__MDL_COMPLEXI/2.000000E+00_16*MP__G*
     $ (MP__MDL_CONJG__TWCFT_UV_EW_R_1EPS_+MP__MDL_TWCFT_UV_EW_R_1EPS_)
      MP__R2_UUA = (2.000000E+00_16*(MP__MDL_EE*MP__MDL_COMPLEXI)
     $ /3.000000E+00_16)*MP__MDL_R2MIXEDFACTOR_FIN_
      MP__R2_DDZ_V3 = (-(MP__MDL_EE*MP__MDL_COMPLEXI*MP__MDL_SW)/
     $ (6.000000E+00_16*MP__MDL_CW))*MP__MDL_R2MIXEDFACTOR_FIN_
      MP__R2_UUZ_V2 = ((MP__MDL_CW*MP__MDL_EE*MP__MDL_COMPLEXI)/
     $ (2.000000E+00_16*MP__MDL_SW))*MP__MDL_R2MIXEDFACTOR_FIN_
      MP__R2_GGZUP = 4.000000E+00_16*MP__MDL_AXIALZUP*(1.000000E+00_16
     $ /2.000000E+00_16)*(MP__MDL_G__EXP__2/(1.200000E+01_16*MP__PI**2)
     $ )
      MP__R2_GGZDOWN = 4.000000E+00_16*MP__MDL_AXIALZDOWN*(1.000000E
     $ +00_16/2.000000E+00_16)*(MP__MDL_G__EXP__2/(1.200000E
     $ +01_16*MP__PI**2))
      MP__R2_GGAADOWN = 4.000000E+00_16*(-MP__MDL_VECTORADOWN*MP__MDL_V
     $ECTORADOWN)*(1.000000E+00_16/2.000000E+00_16)*(-
     $ (MP__MDL_COMPLEXI*MP__MDL_G__EXP__2)/(2.400000E+01_16*MP__PI**2)
     $ )
      MP__R2_GGAAUP = 4.000000E+00_16*(-MP__MDL_VECTORAUP*MP__MDL_VECTO
     $RAUP)*(1.000000E+00_16/2.000000E+00_16)*(-(MP__MDL_COMPLEXI*MP__M
     $DL_G__EXP__2)/(2.400000E+01_16*MP__PI**2))
      MP__GC_10 = -MP__G
      MP__GC_11 = MP__MDL_COMPLEXI*MP__G
      MP__R2_GQQ = -MP__MDL_COMPLEXI*MP__MDL_G__EXP__3/(1.600000E
     $ +01_16*MP__PI**2)*((MP__MDL_NCOL__EXP__2-1.000000E+00_16)/
     $ (2.000000E+00_16*MP__MDL_NCOL))*(1.000000E+00_16+MP__MDL_LHV)
      MP__R2_QQQ = MP__MDL_LHV*MP__MDL_COMPLEXI*MP__MDL_G__EXP__2*
     $ (MP__MDL_NCOL__EXP__2-1.000000E+00_16)/(3.200000E
     $ +01_16*MP__PI**2*MP__MDL_NCOL)
      MP__R2_QQT = MP__MDL_LHV*MP__MDL_COMPLEXI*MP__MDL_G__EXP__2*
     $ (MP__MDL_NCOL__EXP__2-1.000000E+00_16)*(2.000000E
     $ +00_16*MP__MDL_MT)/(3.200000E+01_16*MP__PI**2*MP__MDL_NCOL)
      MP__UV_GQQG_1EPS = MP__MDL_COMPLEXI*MP__MDL_G_UVG_1EPS_*MP__G
      MP__UV_GQQQ_1EPS = MP__MDL_COMPLEXI*MP__MDL_G_UVQ_1EPS_*MP__G
      MP__UV_TMASS_1EPS = MP__MDL_TMASS_UV_1EPS_
      MP__UVWFCT_G_1_1EPS = MP_COND(CMPLX(MP__MDL_MT,KIND=16),CMPLX
     $ (0.000000E+00_16,KIND=16),CMPLX(-((MP__MDL_G__EXP__2)/
     $ (2.000000E+00_16*4.800000E+01_16*MP__PI**2))*4.000000E
     $ +00_16*MP__MDL_TF,KIND=16))
      MP__UVWFCT_T_0_1EPS = MP_COND(CMPLX(MP__MDL_MT,KIND=16),CMPLX
     $ (0.000000E+00_16,KIND=16),CMPLX(-((MP__MDL_G__EXP__2)/
     $ (2.000000E+00_16*1.600000E+01_16*MP__PI**2))*3.000000E
     $ +00_16*MP__MDL_CF,KIND=16))
      END
