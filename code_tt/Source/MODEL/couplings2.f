ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c      written by the UFO converter
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

      SUBROUTINE COUP2()

      IMPLICIT NONE
      INCLUDE 'model_functions.inc'

      DOUBLE PRECISION PI, ZERO
      PARAMETER  (PI=3.141592653589793D0)
      PARAMETER  (ZERO=0D0)
      INCLUDE 'input.inc'
      INCLUDE 'coupl.inc'
      UV_GQQT = MDL_COMPLEXI*MDL_G_UVT_FIN_*G
      UV_TMASS = MDL_TMASS_UV_FIN_
      UVWFCT_G_1 = COND(DCMPLX(MDL_MT),DCMPLX(0.000000D+00),DCMPLX((
     $ (MDL_G__EXP__2)/(2.000000D+00*4.800000D+01*PI**2))*4.000000D
     $ +00*MDL_TF*REGLOG(DCMPLX(MDL_MT__EXP__2/MDL_MU_R__EXP__2))))
      UVWFCT_T_0 = COND(DCMPLX(MDL_MT),DCMPLX(0.000000D+00),DCMPLX(-(
     $ (MDL_G__EXP__2)/(2.000000D+00*1.600000D+01*PI**2))*MDL_CF*
     $ (4.000000D+00-3.000000D+00*REGLOG(DCMPLX(MDL_MT__EXP__2
     $ /MDL_MU_R__EXP__2)))))
      UV_GTTLEW = MDL_COMPLEXI/2.000000D+00*G*(MDL_CONJG__TWCFT_UV_EW_L
     $_FIN_+MDL_TWCFT_UV_EW_L_FIN_)
      UV_GTTREW = MDL_COMPLEXI/2.000000D+00*G*(MDL_CONJG__TWCFT_UV_EW_R
     $_FIN_+MDL_TWCFT_UV_EW_R_FIN_)
      UV_GTTLEW_1EPS = MDL_COMPLEXI/2.000000D+00*G*
     $ (MDL_CONJG__TWCFT_UV_EW_L_1EPS_+MDL_TWCFT_UV_EW_L_1EPS_)
      UV_GTTREW_1EPS = MDL_COMPLEXI/2.000000D+00*G*
     $ (MDL_CONJG__TWCFT_UV_EW_R_1EPS_+MDL_TWCFT_UV_EW_R_1EPS_)
      R2_UUA = (2.000000D+00*(MDL_EE*MDL_COMPLEXI)/3.000000D+00)
     $ *MDL_R2MIXEDFACTOR_FIN_
      R2_DDZ_V3 = (-(MDL_EE*MDL_COMPLEXI*MDL_SW)/(6.000000D+00*MDL_CW))
     $ *MDL_R2MIXEDFACTOR_FIN_
      R2_UUZ_V2 = ((MDL_CW*MDL_EE*MDL_COMPLEXI)/(2.000000D+00*MDL_SW))
     $ *MDL_R2MIXEDFACTOR_FIN_
      R2_GGZUP = 4.000000D+00*MDL_AXIALZUP*(1.000000D+00/2.000000D+00)
     $ *(MDL_G__EXP__2/(1.200000D+01*PI**2))
      R2_GGZDOWN = 4.000000D+00*MDL_AXIALZDOWN*(1.000000D+00/2.000000D
     $ +00)*(MDL_G__EXP__2/(1.200000D+01*PI**2))
      R2_GGAADOWN = 4.000000D+00*(-MDL_VECTORADOWN*MDL_VECTORADOWN)*
     $ (1.000000D+00/2.000000D+00)*(-(MDL_COMPLEXI*MDL_G__EXP__2)/
     $ (2.400000D+01*PI**2))
      R2_GGAAUP = 4.000000D+00*(-MDL_VECTORAUP*MDL_VECTORAUP)*
     $ (1.000000D+00/2.000000D+00)*(-(MDL_COMPLEXI*MDL_G__EXP__2)/
     $ (2.400000D+01*PI**2))
      GC_10 = -G
      GC_11 = MDL_COMPLEXI*G
      R2_GQQ = -MDL_COMPLEXI*MDL_G__EXP__3/(1.600000D+01*PI**2)*(
     $ (MDL_NCOL__EXP__2-1.000000D+00)/(2.000000D+00*MDL_NCOL))*
     $ (1.000000D+00+MDL_LHV)
      R2_QQQ = MDL_LHV*MDL_COMPLEXI*MDL_G__EXP__2*(MDL_NCOL__EXP__2
     $ -1.000000D+00)/(3.200000D+01*PI**2*MDL_NCOL)
      R2_QQT = MDL_LHV*MDL_COMPLEXI*MDL_G__EXP__2*(MDL_NCOL__EXP__2
     $ -1.000000D+00)*(2.000000D+00*MDL_MT)/(3.200000D
     $ +01*PI**2*MDL_NCOL)
      UV_GQQG_1EPS = MDL_COMPLEXI*MDL_G_UVG_1EPS_*G
      UV_GQQQ_1EPS = MDL_COMPLEXI*MDL_G_UVQ_1EPS_*G
      UV_TMASS_1EPS = MDL_TMASS_UV_1EPS_
      UVWFCT_G_1_1EPS = COND(DCMPLX(MDL_MT),DCMPLX(0.000000D+00)
     $ ,DCMPLX(-((MDL_G__EXP__2)/(2.000000D+00*4.800000D+01*PI**2))
     $ *4.000000D+00*MDL_TF))
      UVWFCT_T_0_1EPS = COND(DCMPLX(MDL_MT),DCMPLX(0.000000D+00)
     $ ,DCMPLX(-((MDL_G__EXP__2)/(2.000000D+00*1.600000D+01*PI**2))
     $ *3.000000D+00*MDL_CF))
      END
