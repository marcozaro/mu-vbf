      SUBROUTINE ME_ACCESSOR_HOOK_1(P,HEL,USER_ALPHAS,ANS)
      IMPLICIT NONE
C     
C     CONSTANT
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INTEGER NSQAMPSO
      PARAMETER (NSQAMPSO=1)
      REAL*8 PI
      PARAMETER (PI= 3.141592653589793D0)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS(0:NSQAMPSO)
      INTEGER HEL
      DOUBLE PRECISION USER_ALPHAS
CF2PY INTENT(IN)  :: P
CF2PY INTENT(IN)  :: HEL
CF2PY INTENT(IN)  :: USER_ALPHAS
CF2PY INTENT(OUT) :: ANS

      REAL*8 THIS_G

      INCLUDE 'coupl.inc'

C     ----------
C     BEGIN CODE
C     ----------

      IF (USER_ALPHAS.GT.0.0D0) THEN
        THIS_G = 2* DSQRT(USER_ALPHAS*PI)
        IF (THIS_G.NE.G) THEN
          G = THIS_G
          CALL UPDATE_AS_PARAM()
        ENDIF
      ENDIF

      CALL SMATRIXHEL_SPLITORDERS_1(P,HEL,ANS)

      END

      SUBROUTINE SMATRIX_1(P,ANS_SUMMED)
C     
C     Simple routine wrapper to provide the same interface for
C     backward compatibility for usage without split orders.
C     
C     
C     CONSTANTS
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INTEGER NSQAMPSO
      PARAMETER (NSQAMPSO=1)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL), ANS_SUMMED
C     
C     VARIABLES
C     
      INTEGER I
      REAL*8 ANS(0:NSQAMPSO)
C     
C     BEGIN CODE
C     
      CALL SMATRIX_SPLITORDERS_1(P,ANS)
      ANS_SUMMED=ANS(0)

      END

      SUBROUTINE SMATRIXHEL_1(P,HEL,ANS)
      IMPLICIT NONE
C     
C     CONSTANT
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INTEGER                 NCOMB
      PARAMETER (             NCOMB=16)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS
      INTEGER HEL
C     
C     GLOBAL VARIABLES
C     
      INTEGER USERHEL
      COMMON/HELUSERCHOICE_1/USERHEL
C     ----------
C     BEGIN CODE
C     ----------
      USERHEL=HEL
      CALL SMATRIX_1(P,ANS)
      USERHEL=-1

      END

C     Give access to the helicity definition to the f2py API.
      SUBROUTINE GET_HELICITY_DEFINITIONS_1(NHEL_OUT)
      IMPLICIT NONE

      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INTEGER    NCOMB
      PARAMETER (NCOMB=16)
      INTEGER NHEL(NEXTERNAL,NCOMB)
      COMMON/BORN_HEL_CONFIGS_1/NHEL

      INTEGER NHEL_OUT(NCOMB,NEXTERNAL)
CF2PY INTENT(OUT) :: NHEL_OUT

      INTEGER I,J

      DO I=1,NEXTERNAL
        DO J=1,NCOMB
          NHEL_OUT(J,I) = NHEL(I,J)
        ENDDO
      ENDDO

      END

      SUBROUTINE SMATRIX_SPLITORDERS_1(P,ANS)
C     
C     Generated by MadGraph5_aMC@NLO v. 2.5.3, 2017-03-09
C     By the MadGraph5_aMC@NLO Development Team
C     Visit launchpad.net/madgraph5 and amcatnlo.web.cern.ch
C     
C     MadGraph StandAlone Version
C     
C     Returns amplitude squared summed/avg over colors
C     and helicities
C     for the point in phase space P(0:3,NEXTERNAL)
C     
C     Process: a a > t t~ QED^2<=8 @1
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INTEGER    NINITIAL
      PARAMETER (NINITIAL=2)
      INTEGER NPOLENTRIES
      PARAMETER (NPOLENTRIES=(NEXTERNAL+1)*6)
      INTEGER                 NCOMB
      PARAMETER (             NCOMB=16)
      INTEGER NSQAMPSO
      PARAMETER (NSQAMPSO=1)
      INTEGER HELAVGFACTOR
      PARAMETER (HELAVGFACTOR=4)
      LOGICAL CHOSEN_SO_CONFIGS(NSQAMPSO)
      DATA CHOSEN_SO_CONFIGS/.TRUE./
      COMMON/CHOSEN_BORN_SQSO_1/CHOSEN_SO_CONFIGS
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS(0:NSQAMPSO)
C     
C     LOCAL VARIABLES 
C     
      LOGICAL DO_INCLUDE_HEL_CONTRIB
      INTEGER NTRY
      REAL*8 T(NSQAMPSO), BUFF
      INTEGER IHEL,IDEN, I, J
C     For a 1>N process, them BEAMTWO_HELAVGFACTOR would be set to 1.
      INTEGER BEAMS_HELAVGFACTOR(2)
      DATA (BEAMS_HELAVGFACTOR(I),I=1,2)/2,2/
      INTEGER JC(NEXTERNAL)
      LOGICAL GOODHEL(NCOMB)
      DATA NTRY/0/
      DATA GOODHEL/NCOMB*.FALSE./

      INTEGER HELICITIES(NEXTERNAL)

      DATA IDEN/ 4/
C     
C     GLOBAL VARIABLES
C     
      INTEGER NHEL(NEXTERNAL,NCOMB)
      DATA (NHEL(I,   1),I=1,4) /-1,-1,-1, 1/
      DATA (NHEL(I,   2),I=1,4) /-1,-1,-1,-1/
      DATA (NHEL(I,   3),I=1,4) /-1,-1, 1, 1/
      DATA (NHEL(I,   4),I=1,4) /-1,-1, 1,-1/
      DATA (NHEL(I,   5),I=1,4) /-1, 1,-1, 1/
      DATA (NHEL(I,   6),I=1,4) /-1, 1,-1,-1/
      DATA (NHEL(I,   7),I=1,4) /-1, 1, 1, 1/
      DATA (NHEL(I,   8),I=1,4) /-1, 1, 1,-1/
      DATA (NHEL(I,   9),I=1,4) / 1,-1,-1, 1/
      DATA (NHEL(I,  10),I=1,4) / 1,-1,-1,-1/
      DATA (NHEL(I,  11),I=1,4) / 1,-1, 1, 1/
      DATA (NHEL(I,  12),I=1,4) / 1,-1, 1,-1/
      DATA (NHEL(I,  13),I=1,4) / 1, 1,-1, 1/
      DATA (NHEL(I,  14),I=1,4) / 1, 1,-1,-1/
      DATA (NHEL(I,  15),I=1,4) / 1, 1, 1, 1/
      DATA (NHEL(I,  16),I=1,4) / 1, 1, 1,-1/
      COMMON/BORN_HEL_CONFIGS_1/NHEL

      INTEGER USERHEL
      DATA USERHEL/-1/
      COMMON/HELUSERCHOICE_1/USERHEL

      INTEGER POLARIZATIONS(0:NEXTERNAL,0:5)
      DATA ((POLARIZATIONS(I,J),I=0,NEXTERNAL),J=0,5)/NPOLENTRIES*-1/
      COMMON/BORN_BEAM_POL_1/POLARIZATIONS

C     
C     COLOR CORRELATORS DATA
C     
C     CCI will be the general color correlated index in loops
C     and CCIA is the index of the loop over COLOR_CORRELATORS_TO_CONSI
C     DER
      INTEGER CCI, CCIA

      INTEGER NCOLORCORRELATORS
      PARAMETER (NCOLORCORRELATORS=200)
      INTEGER NCC_TIMES_NSQAMPSO
      PARAMETER (NCC_TIMES_NSQAMPSO=NCOLORCORRELATORS*(NSQAMPSO+1))

C     Index 0 is the number of correlators to consider and the next
C      indices are which one to consider
      INTEGER COLOR_CORRELATORS_TO_CONSIDER(0:NCOLORCORRELATORS)
      DATA COLOR_CORRELATORS_TO_CONSIDER(0)/NCOLORCORRELATORS/
      DATA COLOR_CORRELATORS_TO_CONSIDER(1) / 1 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(2) / 2 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(3) / 3 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(4) / 4 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(5) / 5 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(6) / 6 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(7) / 7 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(8) / 8 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(9) / 9 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(10) / 10 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(11) / 11 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(12) / 12 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(13) / 13 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(14) / 14 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(15) / 15 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(16) / 16 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(17) / 17 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(18) / 18 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(19) / 19 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(20) / 20 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(21) / 21 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(22) / 22 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(23) / 23 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(24) / 24 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(25) / 25 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(26) / 26 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(27) / 27 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(28) / 28 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(29) / 29 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(30) / 30 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(31) / 31 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(32) / 32 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(33) / 33 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(34) / 34 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(35) / 35 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(36) / 36 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(37) / 37 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(38) / 38 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(39) / 39 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(40) / 40 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(41) / 41 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(42) / 42 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(43) / 43 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(44) / 44 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(45) / 45 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(46) / 46 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(47) / 47 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(48) / 48 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(49) / 49 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(50) / 50 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(51) / 51 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(52) / 52 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(53) / 53 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(54) / 54 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(55) / 55 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(56) / 56 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(57) / 57 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(58) / 58 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(59) / 59 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(60) / 60 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(61) / 61 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(62) / 62 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(63) / 63 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(64) / 64 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(65) / 65 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(66) / 66 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(67) / 67 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(68) / 68 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(69) / 69 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(70) / 70 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(71) / 71 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(72) / 72 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(73) / 73 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(74) / 74 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(75) / 75 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(76) / 76 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(77) / 77 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(78) / 78 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(79) / 79 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(80) / 80 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(81) / 81 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(82) / 82 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(83) / 83 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(84) / 84 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(85) / 85 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(86) / 86 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(87) / 87 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(88) / 88 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(89) / 89 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(90) / 90 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(91) / 91 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(92) / 92 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(93) / 93 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(94) / 94 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(95) / 95 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(96) / 96 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(97) / 97 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(98) / 98 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(99) / 99 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(100) / 100 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(101) / 101 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(102) / 102 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(103) / 103 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(104) / 104 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(105) / 105 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(106) / 106 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(107) / 107 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(108) / 108 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(109) / 109 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(110) / 110 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(111) / 111 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(112) / 112 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(113) / 113 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(114) / 114 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(115) / 115 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(116) / 116 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(117) / 117 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(118) / 118 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(119) / 119 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(120) / 120 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(121) / 121 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(122) / 122 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(123) / 123 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(124) / 124 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(125) / 125 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(126) / 126 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(127) / 127 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(128) / 128 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(129) / 129 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(130) / 130 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(131) / 131 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(132) / 132 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(133) / 133 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(134) / 134 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(135) / 135 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(136) / 136 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(137) / 137 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(138) / 138 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(139) / 139 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(140) / 140 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(141) / 141 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(142) / 142 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(143) / 143 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(144) / 144 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(145) / 145 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(146) / 146 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(147) / 147 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(148) / 148 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(149) / 149 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(150) / 150 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(151) / 151 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(152) / 152 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(153) / 153 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(154) / 154 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(155) / 155 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(156) / 156 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(157) / 157 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(158) / 158 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(159) / 159 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(160) / 160 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(161) / 161 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(162) / 162 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(163) / 163 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(164) / 164 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(165) / 165 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(166) / 166 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(167) / 167 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(168) / 168 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(169) / 169 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(170) / 170 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(171) / 171 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(172) / 172 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(173) / 173 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(174) / 174 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(175) / 175 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(176) / 176 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(177) / 177 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(178) / 178 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(179) / 179 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(180) / 180 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(181) / 181 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(182) / 182 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(183) / 183 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(184) / 184 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(185) / 185 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(186) / 186 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(187) / 187 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(188) / 188 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(189) / 189 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(190) / 190 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(191) / 191 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(192) / 192 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(193) / 193 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(194) / 194 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(195) / 195 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(196) / 196 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(197) / 197 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(198) / 198 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(199) / 199 /
      DATA COLOR_CORRELATORS_TO_CONSIDER(200) / 200 /

      REAL*8 COLOR_CORRELATED_EVALS(NCOLORCORRELATORS,0:NSQAMPSO)
      DATA ((COLOR_CORRELATED_EVALS(I,J), I=1,NCOLORCORRELATORS),J=0
     $ ,NSQAMPSO) / NCC_TIMES_NSQAMPSO*0.0D0 /
      COMMON/COLOR_CORRELATIONS_1/COLOR_CORRELATORS_TO_CONSIDER,
     $  COLOR_CORRELATED_EVALS

      INCLUDE 'spin_correlations.inc'
      INTEGER SPINCORR_HEL_INDICES(NEXTERNAL)
      LOGICAL SKIP_THIS_HELICITY
      INTEGER ISC
      COMPLEX*16 WEXT(20,NEXTERNAL)

C     
C     FUNCTIONS
C     
      LOGICAL IS_BORN_HEL_SELECTED_1

C     ----------
C     BEGIN CODE
C     ----------

C     
C     Reinitialize color correlated values
C     
      DO CCIA=1,COLOR_CORRELATORS_TO_CONSIDER(0)
        CCI = COLOR_CORRELATORS_TO_CONSIDER(CCIA)
        DO J=1,NSQAMPSO
          COLOR_CORRELATED_EVALS(CCI,J) = 0.0D0
        ENDDO
      ENDDO

      NTRY=NTRY+1
      DO IHEL=1,NEXTERNAL
        JC(IHEL) = +1
      ENDDO
      DO I=1,NSQAMPSO
        ANS(I) = 0D0
      ENDDO
C     When spin-2 particles are involved, the Helicity filtering is
C      dangerous for the 2->1 topology.
C     This is because depending on the MC setup the initial PS points
C      have back-to-back initial states
C     for which some of the spin-2 helicity configurations are zero.
C      But they are no longer zero
C     if the point is boosted on the z-axis. Remember that HELAS
C      helicity amplitudes are no longer
C     lorentz invariant with expternal spin-2 particles (only the
C      helicity sum is).
C     For this reason, we simply remove the filterin when there is
C      only three external particles.
      IF (NEXTERNAL.LE.3) THEN
        DO IHEL=1,NCOMB
          GOODHEL(IHEL)=.TRUE.
        ENDDO
      ENDIF

C     If spin correlations are active, then remove the helicity
C      filtering.
      IF (N_SPIN_CORR_RUNS.GT.0) THEN
        DO IHEL=1,NCOMB
          GOODHEL(IHEL)=.TRUE.
        ENDDO
        NTRY = 0
      ENDIF

C     Save helicity indices of the spin-correlated legs that we will
C      use to insert the extra spin. corr. runs.
      DO I=1,NEXTERNAL
        SPINCORR_HEL_INDICES(I) = -1000
      ENDDO

      DO IHEL=1,NCOMB
        IF (USERHEL.EQ.-1.OR.USERHEL.EQ.IHEL) THEN
          IF (GOODHEL(IHEL) .OR. NTRY .LT. 2 .OR.USERHEL.NE.-1) THEN
            IF(NTRY.GE.2.AND.POLARIZATIONS(0,0).NE.-1.AND.
     $       (.NOT.IS_BORN_HEL_SELECTED_1(IHEL))) THEN
              CYCLE
            ENDIF

            IF (N_SPIN_CORR_RUNS.GT.0) THEN
C             Now we know that we are in an helicity configuration
C              that was selected by the user
C             Record the helicity index of legs that are
C              spin-correlated
              DO I=1,NEXTERNAL
                IF (N_SPIN_CORR_VECTORS(I).GT.0.AND.SPINCORR_HEL_INDICE
     $S(I).EQ.-1000) THEN
                  SPINCORR_HEL_INDICES(I) = NHEL(I,IHEL)
                ENDIF
              ENDDO

C             Now make sure to skip all helicity configurations with
C              helicity indices for the spin-correlated legs that
C             does not match the first one encountered
              SKIP_THIS_HELICITY = .FALSE.
              DO I=1,NEXTERNAL
                IF (SPINCORR_HEL_INDICES(I).NE.-1000.AND.SPINCORR_HEL_I
     $NDICES(I).NE.NHEL(I,IHEL)) THEN
                  SKIP_THIS_HELICITY = .TRUE.
                  EXIT
                ENDIF
              ENDDO
              IF (SKIP_THIS_HELICITY) THEN
                CYCLE
              ENDIF
            ENDIF

C           Now insert the extra runs for the spin-correlations
C           The MIN statement allows to make sure that we proceed with
C            a normal run if not spin-correlations are active
            DO ISC=MIN(N_SPIN_CORR_RUNS,1),N_SPIN_CORR_RUNS
              DO_INCLUDE_HEL_CONTRIB = (POLARIZATIONS(0,0).EQ.
     $         -1.OR.IS_BORN_HEL_SELECTED_1(IHEL))
              DO I=1,NEXTERNAL
                IF (SPIN_CORR_RUNS(ISC, I).EQ.-1000) THEN
C                 No spin correlation, leave it as it is
                  HELICITIES(I) = NHEL(I,IHEL)
                  DO J=1,20
                    WEXT(J,I) = DCMPLX(0.0D0,0.0D0)
                  ENDDO
                ELSE
C                 Spin correlation, enforce the polarization vector
                  HELICITIES(I) = -1000
                  DO J=1,4
                    WEXT(J,I) = SPIN_CORR_VECTORS(I,SPIN_CORR_RUNS(ISC
     $               , I),J)
                  ENDDO
                  DO J=5,20
                    WEXT(J,I) = DCMPLX(0.0D0,0.0D0)
                  ENDDO
                ENDIF
              ENDDO
              CALL MATRIX_1(P ,HELICITIES(1),JC(1), T,
     $          DO_INCLUDE_HEL_CONTRIB, WEXT(1,1))
              BUFF=0D0
              DO I=1,NSQAMPSO
                IF(DO_INCLUDE_HEL_CONTRIB) THEN
                  ANS(I)=ANS(I)+T(I)
                ENDIF
                BUFF=BUFF+T(I)
              ENDDO
              IF (BUFF .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL)) THEN
                GOODHEL(IHEL)=.TRUE.
              ENDIF
C             End of the do-loop for the insertion of the extra
C              spin-correlation runs
            ENDDO
          ENDIF
        ENDIF
      ENDDO
      ANS(0)=0.0D0
      DO CCIA=1,COLOR_CORRELATORS_TO_CONSIDER(0)
        CCI = COLOR_CORRELATORS_TO_CONSIDER(CCIA)
        COLOR_CORRELATED_EVALS(CCI,0) = 0.0D0
      ENDDO

      DO I=1,NSQAMPSO
        ANS(I)=ANS(I)/DBLE(IDEN)
        DO CCIA=1,COLOR_CORRELATORS_TO_CONSIDER(0)
          CCI = COLOR_CORRELATORS_TO_CONSIDER(CCIA)
          COLOR_CORRELATED_EVALS(CCI,I) = COLOR_CORRELATED_EVALS(CCI,I)
     $     /DBLE(IDEN)
        ENDDO
        IF (CHOSEN_SO_CONFIGS(I)) THEN
          ANS(0)=ANS(0)+ANS(I)
          DO CCIA=1,COLOR_CORRELATORS_TO_CONSIDER(0)
            CCI = COLOR_CORRELATORS_TO_CONSIDER(CCIA)
            COLOR_CORRELATED_EVALS(CCI,0) = COLOR_CORRELATED_EVALS(CCI
     $       ,0) + COLOR_CORRELATED_EVALS(CCI,I)
          ENDDO
        ENDIF
      ENDDO
      IF(USERHEL.NE.-1) THEN
        DO I=0,NSQAMPSO
          ANS(I)=ANS(I)*HELAVGFACTOR
          DO CCIA=1,COLOR_CORRELATORS_TO_CONSIDER(0)
            CCI = COLOR_CORRELATORS_TO_CONSIDER(CCIA)
            COLOR_CORRELATED_EVALS(CCI,I) = COLOR_CORRELATED_EVALS(CCI
     $       ,I)*HELAVGFACTOR
          ENDDO
        ENDDO
      ELSE
        DO J=1,NINITIAL
          IF (POLARIZATIONS(J,0).NE.-1) THEN
            DO I=0,NSQAMPSO
              ANS(I)=ANS(I)*BEAMS_HELAVGFACTOR(J)
              ANS(I)=ANS(I)/POLARIZATIONS(J,0)
              DO CCIA=1,COLOR_CORRELATORS_TO_CONSIDER(0)
                CCI = COLOR_CORRELATORS_TO_CONSIDER(CCIA)
                COLOR_CORRELATED_EVALS(CCI,I) = COLOR_CORRELATED_EVALS
     $           (CCI,I)*BEAMS_HELAVGFACTOR(J)
                COLOR_CORRELATED_EVALS(CCI,I) = COLOR_CORRELATED_EVALS
     $           (CCI,I)/POLARIZATIONS(J,0)
              ENDDO
            ENDDO
          ENDIF
        ENDDO
      ENDIF
      END

      SUBROUTINE SMATRIXHEL_SPLITORDERS_1(P,HEL,ANS)
      IMPLICIT NONE
C     
C     CONSTANT
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INTEGER                 NCOMB
      PARAMETER (             NCOMB=16)
      INTEGER NSQAMPSO
      PARAMETER (NSQAMPSO=1)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS(0:NSQAMPSO)
      INTEGER HEL
CF2PY INTENT(IN)  :: P
CF2PY INTENT(IN)  :: HEL
CF2PY INTENT(OUT) :: ANS

C     
C     GLOBAL VARIABLES
C     
      INTEGER USERHEL
      COMMON/HELUSERCHOICE_1/USERHEL
C     ----------
C     BEGIN CODE
C     ----------
      USERHEL=HEL
      CALL SMATRIX_SPLITORDERS_1(P,ANS)
      USERHEL=-1

      END

      SUBROUTINE MATRIX_1(P,NHEL,IC,RES, DO_INCLUDE_HEL_CONTRIB,WEXT)

C     
C     Generated by MadGraph5_aMC@NLO v. 2.5.3, 2017-03-09
C     By the MadGraph5_aMC@NLO Development Team
C     Visit launchpad.net/madgraph5 and amcatnlo.web.cern.ch
C     
C     Returns amplitude squared summed/avg over colors
C     for the point with external lines W(0:6,NEXTERNAL)
C     
C     Process: a a > t t~ QED^2<=8 @1
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=2)
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INTEGER    NWAVEFUNCS, NCOLOR
      PARAMETER (NWAVEFUNCS=5, NCOLOR=1)
      INTEGER NAMPSO, NSQAMPSO
      PARAMETER (NAMPSO=1, NSQAMPSO=1)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
      COMPLEX*16 IMAG1
      PARAMETER (IMAG1=(0D0,1D0))
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
      REAL*8 RES(NSQAMPSO)
      LOGICAL DO_INCLUDE_HEL_CONTRIB
      COMPLEX*16 WEXT(20,NEXTERNAL)
C     
C     LOCAL VARIABLES 
C     
      INTEGER I,J,M,N, SQSOIND
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 JAMP(NCOLOR,NAMPSO)
      COMPLEX*16 W(20,NWAVEFUNCS)
      COMPLEX*16 DUM0,DUM1
      DATA DUM0, DUM1/(0D0, 0D0), (1D0, 0D0)/
C     
C     FUNCTION
C     
      INTEGER SQSOINDEX_1
C     
C     GLOBAL VARIABLES
C     
      INCLUDE 'coupl.inc'
      INCLUDE 'spin_correlations.inc'
C     
C     COLOR DATA
C     
      DATA DENOM(1)/1/
      DATA (CF(I,  1),I=  1,  1) /    3/
C     1 T(3,4)

C     
C     COLOR CORRELATORS DATA
C     
C     CCI will be the general color correlated index in loops
C     and CCIA is the index of the loop over COLOR_CORRELATORS_TO_CONSI
C     DER
      INTEGER CCI, CCIA

      INTEGER NCOLORCORRELATORS
      PARAMETER (NCOLORCORRELATORS=200)

      COMPLEX*16 CCZTEMP(NCOLORCORRELATORS)

C     Index 0 is the number of correlators to consider and the next
C      indices are which one to consider
      INTEGER COLOR_CORRELATORS_TO_CONSIDER(0:NCOLORCORRELATORS)
      REAL*8 COLOR_CORRELATED_EVALS(NCOLORCORRELATORS, 0:NSQAMPSO)
      COMMON/COLOR_CORRELATIONS_1/COLOR_CORRELATORS_TO_CONSIDER,
     $  COLOR_CORRELATED_EVALS

      INTEGER CC_DENOM(NCOLORCORRELATORS,NCOLOR), CC_CF
     $ (NCOLORCORRELATORS,NCOLOR,NCOLOR)
C     Correlator: -1 T(301,103,3) -1 T(301,203,103)
      DATA CC_DENOM(1,1)/1/
      DATA (CC_CF( 1,I, 1),I= 1,  1) /    4/
C     Correlator: -1 T(301,103,3) 1 T(301,104,204)
      DATA CC_DENOM(2,1)/1/
      DATA (CC_CF( 2,I, 1),I= 1,  1) /   -4/
C     Correlator: 1 T(301,4,104) -1 T(301,203,103)
      DATA CC_DENOM(3,1)/1/
      DATA (CC_CF( 3,I, 1),I= 1,  1) /   -4/
C     Correlator: 1 T(301,4,104) 1 T(301,104,204)
      DATA CC_DENOM(4,1)/1/
      DATA (CC_CF( 4,I, 1),I= 1,  1) /    4/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,301,302) (no interference)
      DATA CC_DENOM(5,1)/0/
      DATA (CC_CF( 5,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,301,302) (no interference)
      DATA CC_DENOM(6,1)/0/
      DATA (CC_CF( 6,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1
C      T(302,-200001,103) T(301,203,-200001) (no interference)
      DATA CC_DENOM(7,1)/0/
      DATA (CC_CF( 7,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,302,301) (no interference)
      DATA CC_DENOM(8,1)/0/
      DATA (CC_CF( 8,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA CC_DENOM(9,1)/1/
      DATA (CC_CF( 9,I, 1),I= 1,  1) /    2/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1
C      T(301,-200001,103) T(302,203,-200001) (no interference)
      DATA CC_DENOM(10,1)/0/
      DATA (CC_CF(10,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,301,302) (no interference)
      DATA CC_DENOM(11,1)/0/
      DATA (CC_CF(11,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,301,302) (no interference)
      DATA CC_DENOM(12,1)/0/
      DATA (CC_CF(12,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) -1
C      T(301,203,103) T(302,104,204) (no interference)
      DATA CC_DENOM(13,1)/0/
      DATA (CC_CF(13,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1
C      T(302,104,-200001) T(301,-200001,204) (no interference)
      DATA CC_DENOM(14,1)/0/
      DATA (CC_CF(14,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,302,301) (no interference)
      DATA CC_DENOM(15,1)/0/
      DATA (CC_CF(15,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA CC_DENOM(16,1)/1/
      DATA (CC_CF(16,I, 1),I= 1,  1) /   -2/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) -1
C      T(301,104,204) T(302,203,103) (no interference)
      DATA CC_DENOM(17,1)/0/
      DATA (CC_CF(17,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1
C      T(301,104,-200001) T(302,-200001,204) (no interference)
      DATA CC_DENOM(18,1)/0/
      DATA (CC_CF(18,I, 1),I= 1,  1) /    0/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,301,302) (no interference)
      DATA CC_DENOM(19,1)/0/
      DATA (CC_CF(19,I, 1),I= 1,  1) /    0/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA CC_DENOM(20,1)/1/
      DATA (CC_CF(20,I, 1),I= 1,  1) /  -12/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA CC_DENOM(21,1)/1/
      DATA (CC_CF(21,I, 1),I= 1,  1) /    6/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA CC_DENOM(22,1)/1/
      DATA (CC_CF(22,I, 1),I= 1,  1) /   12/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,302,301) (no interference)
      DATA CC_DENOM(23,1)/0/
      DATA (CC_CF(23,I, 1),I= 1,  1) /    0/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA CC_DENOM(24,1)/1/
      DATA (CC_CF(24,I, 1),I= 1,  1) /   -6/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,301,302) (no interference)
      DATA CC_DENOM(25,1)/0/
      DATA (CC_CF(25,I, 1),I= 1,  1) /    0/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA CC_DENOM(26,1)/1/
      DATA (CC_CF(26,I, 1),I= 1,  1) /   12/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) -1
C      T(301,203,103) T(302,104,204)
      DATA CC_DENOM(27,1)/1/
      DATA (CC_CF(27,I, 1),I= 1,  1) /    6/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA CC_DENOM(28,1)/1/
      DATA (CC_CF(28,I, 1),I= 1,  1) /   -6/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA CC_DENOM(29,1)/1/
      DATA (CC_CF(29,I, 1),I= 1,  1) /  -12/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,302,301) (no interference)
      DATA CC_DENOM(30,1)/0/
      DATA (CC_CF(30,I, 1),I= 1,  1) /    0/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) -1
C      T(301,104,204) T(302,203,103)
      DATA CC_DENOM(31,1)/1/
      DATA (CC_CF(31,I, 1),I= 1,  1) /   -6/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA CC_DENOM(32,1)/1/
      DATA (CC_CF(32,I, 1),I= 1,  1) /    6/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) -1
C      T(-200001,203,103) T(-200001,301,302) (no interference)
      DATA CC_DENOM(33,1)/0/
      DATA (CC_CF(33,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA CC_DENOM(34,1)/1/
      DATA (CC_CF(34,I, 1),I= 1,  1) /    6/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA CC_DENOM(35,1)/3/
      DATA (CC_CF(35,I, 1),I= 1,  1) /   -2/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA CC_DENOM(36,1)/1/
      DATA (CC_CF(36,I, 1),I= 1,  1) /   -6/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) -1
C      T(-200001,203,103) T(-200001,302,301) (no interference)
      DATA CC_DENOM(37,1)/0/
      DATA (CC_CF(37,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA CC_DENOM(38,1)/3/
      DATA (CC_CF(38,I, 1),I= 1,  1) /   16/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1
C      T(-200001,104,204) T(-200001,301,302) (no interference)
      DATA CC_DENOM(39,1)/0/
      DATA (CC_CF(39,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA CC_DENOM(40,1)/1/
      DATA (CC_CF(40,I, 1),I= 1,  1) /   -6/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) -1
C      T(301,203,103) T(302,104,204)
      DATA CC_DENOM(41,1)/3/
      DATA (CC_CF(41,I, 1),I= 1,  1) /  -16/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA CC_DENOM(42,1)/3/
      DATA (CC_CF(42,I, 1),I= 1,  1) /   16/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA CC_DENOM(43,1)/1/
      DATA (CC_CF(43,I, 1),I= 1,  1) /    6/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1
C      T(-200001,104,204) T(-200001,302,301) (no interference)
      DATA CC_DENOM(44,1)/0/
      DATA (CC_CF(44,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) -1
C      T(301,104,204) T(302,203,103)
      DATA CC_DENOM(45,1)/3/
      DATA (CC_CF(45,I, 1),I= 1,  1) /    2/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA CC_DENOM(46,1)/3/
      DATA (CC_CF(46,I, 1),I= 1,  1) /   -2/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,301,302) (no interference)
      DATA CC_DENOM(47,1)/0/
      DATA (CC_CF(47,I, 1),I= 1,  1) /    0/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA CC_DENOM(48,1)/1/
      DATA (CC_CF(48,I, 1),I= 1,  1) /   12/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA CC_DENOM(49,1)/1/
      DATA (CC_CF(49,I, 1),I= 1,  1) /   -6/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA CC_DENOM(50,1)/1/
      DATA (CC_CF(50,I, 1),I= 1,  1) /  -12/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,302,301) (no interference)
      DATA CC_DENOM(51,1)/0/
      DATA (CC_CF(51,I, 1),I= 1,  1) /    0/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA CC_DENOM(52,1)/1/
      DATA (CC_CF(52,I, 1),I= 1,  1) /    6/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,301,302) (no interference)
      DATA CC_DENOM(53,1)/0/
      DATA (CC_CF(53,I, 1),I= 1,  1) /    0/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA CC_DENOM(54,1)/1/
      DATA (CC_CF(54,I, 1),I= 1,  1) /  -12/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) -1
C      T(301,203,103) T(302,104,204)
      DATA CC_DENOM(55,1)/1/
      DATA (CC_CF(55,I, 1),I= 1,  1) /   -6/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA CC_DENOM(56,1)/1/
      DATA (CC_CF(56,I, 1),I= 1,  1) /    6/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA CC_DENOM(57,1)/1/
      DATA (CC_CF(57,I, 1),I= 1,  1) /   12/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,302,301) (no interference)
      DATA CC_DENOM(58,1)/0/
      DATA (CC_CF(58,I, 1),I= 1,  1) /    0/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) -1
C      T(301,104,204) T(302,203,103)
      DATA CC_DENOM(59,1)/1/
      DATA (CC_CF(59,I, 1),I= 1,  1) /    6/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA CC_DENOM(60,1)/1/
      DATA (CC_CF(60,I, 1),I= 1,  1) /   -6/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA CC_DENOM(61,1)/1/
      DATA (CC_CF(61,I, 1),I= 1,  1) /    2/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,301,302) (no interference)
      DATA CC_DENOM(62,1)/0/
      DATA (CC_CF(62,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1
C      T(302,-200001,103) T(301,203,-200001) (no interference)
      DATA CC_DENOM(63,1)/0/
      DATA (CC_CF(63,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,302,301) (no interference)
      DATA CC_DENOM(64,1)/0/
      DATA (CC_CF(64,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,302,301) (no interference)
      DATA CC_DENOM(65,1)/0/
      DATA (CC_CF(65,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1
C      T(301,-200001,103) T(302,203,-200001) (no interference)
      DATA CC_DENOM(66,1)/0/
      DATA (CC_CF(66,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA CC_DENOM(67,1)/1/
      DATA (CC_CF(67,I, 1),I= 1,  1) /   -2/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,301,302) (no interference)
      DATA CC_DENOM(68,1)/0/
      DATA (CC_CF(68,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) -1
C      T(301,203,103) T(302,104,204) (no interference)
      DATA CC_DENOM(69,1)/0/
      DATA (CC_CF(69,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1
C      T(302,104,-200001) T(301,-200001,204) (no interference)
      DATA CC_DENOM(70,1)/0/
      DATA (CC_CF(70,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,302,301) (no interference)
      DATA CC_DENOM(71,1)/0/
      DATA (CC_CF(71,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,302,301) (no interference)
      DATA CC_DENOM(72,1)/0/
      DATA (CC_CF(72,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) -1
C      T(301,104,204) T(302,203,103) (no interference)
      DATA CC_DENOM(73,1)/0/
      DATA (CC_CF(73,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1
C      T(301,104,-200001) T(302,-200001,204) (no interference)
      DATA CC_DENOM(74,1)/0/
      DATA (CC_CF(74,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) -1
C      T(-200001,203,103) T(-200001,301,302) (no interference)
      DATA CC_DENOM(75,1)/0/
      DATA (CC_CF(75,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA CC_DENOM(76,1)/1/
      DATA (CC_CF(76,I, 1),I= 1,  1) /   -6/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA CC_DENOM(77,1)/3/
      DATA (CC_CF(77,I, 1),I= 1,  1) /   16/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA CC_DENOM(78,1)/1/
      DATA (CC_CF(78,I, 1),I= 1,  1) /    6/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) -1
C      T(-200001,203,103) T(-200001,302,301) (no interference)
      DATA CC_DENOM(79,1)/0/
      DATA (CC_CF(79,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA CC_DENOM(80,1)/3/
      DATA (CC_CF(80,I, 1),I= 1,  1) /   -2/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1
C      T(-200001,104,204) T(-200001,301,302) (no interference)
      DATA CC_DENOM(81,1)/0/
      DATA (CC_CF(81,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA CC_DENOM(82,1)/1/
      DATA (CC_CF(82,I, 1),I= 1,  1) /    6/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) -1
C      T(301,203,103) T(302,104,204)
      DATA CC_DENOM(83,1)/3/
      DATA (CC_CF(83,I, 1),I= 1,  1) /    2/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA CC_DENOM(84,1)/3/
      DATA (CC_CF(84,I, 1),I= 1,  1) /   -2/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA CC_DENOM(85,1)/1/
      DATA (CC_CF(85,I, 1),I= 1,  1) /   -6/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1
C      T(-200001,104,204) T(-200001,302,301) (no interference)
      DATA CC_DENOM(86,1)/0/
      DATA (CC_CF(86,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) -1
C      T(301,104,204) T(302,203,103)
      DATA CC_DENOM(87,1)/3/
      DATA (CC_CF(87,I, 1),I= 1,  1) /  -16/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA CC_DENOM(88,1)/3/
      DATA (CC_CF(88,I, 1),I= 1,  1) /   16/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,301,302) (no interference)
      DATA CC_DENOM(89,1)/0/
      DATA (CC_CF(89,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,301,302) (no interference)
      DATA CC_DENOM(90,1)/0/
      DATA (CC_CF(90,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1
C      T(302,-200001,103) T(301,203,-200001) (no interference)
      DATA CC_DENOM(91,1)/0/
      DATA (CC_CF(91,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,302,301) (no interference)
      DATA CC_DENOM(92,1)/0/
      DATA (CC_CF(92,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA CC_DENOM(93,1)/1/
      DATA (CC_CF(93,I, 1),I= 1,  1) /   -2/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1
C      T(301,-200001,103) T(302,203,-200001) (no interference)
      DATA CC_DENOM(94,1)/0/
      DATA (CC_CF(94,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,301,302) (no interference)
      DATA CC_DENOM(95,1)/0/
      DATA (CC_CF(95,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,301,302) (no interference)
      DATA CC_DENOM(96,1)/0/
      DATA (CC_CF(96,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) -1
C      T(301,203,103) T(302,104,204) (no interference)
      DATA CC_DENOM(97,1)/0/
      DATA (CC_CF(97,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1
C      T(302,104,-200001) T(301,-200001,204) (no interference)
      DATA CC_DENOM(98,1)/0/
      DATA (CC_CF(98,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,302,301) (no interference)
      DATA CC_DENOM(99,1)/0/
      DATA (CC_CF(99,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA CC_DENOM(100,1)/1/
      DATA (CC_CF(100,I, 1),I= 1,  1) /    2/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) -1
C      T(301,104,204) T(302,203,103) (no interference)
      DATA CC_DENOM(101,1)/0/
      DATA (CC_CF(101,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1
C      T(301,104,-200001) T(302,-200001,204) (no interference)
      DATA CC_DENOM(102,1)/0/
      DATA (CC_CF(102,I, 1),I= 1,  1) /    0/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,301,302) (no interference)
      DATA CC_DENOM(103,1)/0/
      DATA (CC_CF(103,I, 1),I= 1,  1) /    0/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA CC_DENOM(104,1)/1/
      DATA (CC_CF(104,I, 1),I= 1,  1) /   12/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA CC_DENOM(105,1)/1/
      DATA (CC_CF(105,I, 1),I= 1,  1) /   -6/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA CC_DENOM(106,1)/1/
      DATA (CC_CF(106,I, 1),I= 1,  1) /  -12/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,302,301) (no interference)
      DATA CC_DENOM(107,1)/0/
      DATA (CC_CF(107,I, 1),I= 1,  1) /    0/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA CC_DENOM(108,1)/1/
      DATA (CC_CF(108,I, 1),I= 1,  1) /    6/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,301,302) (no interference)
      DATA CC_DENOM(109,1)/0/
      DATA (CC_CF(109,I, 1),I= 1,  1) /    0/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA CC_DENOM(110,1)/1/
      DATA (CC_CF(110,I, 1),I= 1,  1) /  -12/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) -1
C      T(301,203,103) T(302,104,204)
      DATA CC_DENOM(111,1)/1/
      DATA (CC_CF(111,I, 1),I= 1,  1) /   -6/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA CC_DENOM(112,1)/1/
      DATA (CC_CF(112,I, 1),I= 1,  1) /    6/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA CC_DENOM(113,1)/1/
      DATA (CC_CF(113,I, 1),I= 1,  1) /   12/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,302,301) (no interference)
      DATA CC_DENOM(114,1)/0/
      DATA (CC_CF(114,I, 1),I= 1,  1) /    0/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) -1
C      T(301,104,204) T(302,203,103)
      DATA CC_DENOM(115,1)/1/
      DATA (CC_CF(115,I, 1),I= 1,  1) /    6/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA CC_DENOM(116,1)/1/
      DATA (CC_CF(116,I, 1),I= 1,  1) /   -6/
C     Correlator: -1 T(301,103,3) T(302,4,104) -1 T(-200001,203,103)
C      T(-200001,301,302) (no interference)
      DATA CC_DENOM(117,1)/0/
      DATA (CC_CF(117,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(301,103,3) T(302,4,104) -1 I T(-200001,203,103)
C      f(-200001,301,302)
      DATA CC_DENOM(118,1)/1/
      DATA (CC_CF(118,I, 1),I= 1,  1) /   -6/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 T(302,-200001,103)
C      T(301,203,-200001)
      DATA CC_DENOM(119,1)/3/
      DATA (CC_CF(119,I, 1),I= 1,  1) /    2/
C     Correlator: -1 T(301,103,3) T(302,4,104) -1 I T(-200001,203,103)
C      f(-200001,302,301)
      DATA CC_DENOM(120,1)/1/
      DATA (CC_CF(120,I, 1),I= 1,  1) /    6/
C     Correlator: -1 T(301,103,3) T(302,4,104) -1 T(-200001,203,103)
C      T(-200001,302,301) (no interference)
      DATA CC_DENOM(121,1)/0/
      DATA (CC_CF(121,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 T(301,-200001,103)
C      T(302,203,-200001)
      DATA CC_DENOM(122,1)/3/
      DATA (CC_CF(122,I, 1),I= 1,  1) /  -16/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 T(-200001,104,204)
C      T(-200001,301,302) (no interference)
      DATA CC_DENOM(123,1)/0/
      DATA (CC_CF(123,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 I T(-200001,104,204)
C      f(-200001,301,302)
      DATA CC_DENOM(124,1)/1/
      DATA (CC_CF(124,I, 1),I= 1,  1) /    6/
C     Correlator: -1 T(301,103,3) T(302,4,104) -1 T(301,203,103)
C      T(302,104,204)
      DATA CC_DENOM(125,1)/3/
      DATA (CC_CF(125,I, 1),I= 1,  1) /   16/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 T(302,104,-200001)
C      T(301,-200001,204)
      DATA CC_DENOM(126,1)/3/
      DATA (CC_CF(126,I, 1),I= 1,  1) /  -16/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 I T(-200001,104,204)
C      f(-200001,302,301)
      DATA CC_DENOM(127,1)/1/
      DATA (CC_CF(127,I, 1),I= 1,  1) /   -6/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 T(-200001,104,204)
C      T(-200001,302,301) (no interference)
      DATA CC_DENOM(128,1)/0/
      DATA (CC_CF(128,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(301,103,3) T(302,4,104) -1 T(301,104,204)
C      T(302,203,103)
      DATA CC_DENOM(129,1)/3/
      DATA (CC_CF(129,I, 1),I= 1,  1) /   -2/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 T(301,104,-200001)
C      T(302,-200001,204)
      DATA CC_DENOM(130,1)/3/
      DATA (CC_CF(130,I, 1),I= 1,  1) /    2/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) -1
C      T(-200001,203,103) T(-200001,301,302) (no interference)
      DATA CC_DENOM(131,1)/0/
      DATA (CC_CF(131,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA CC_DENOM(132,1)/1/
      DATA (CC_CF(132,I, 1),I= 1,  1) /   -6/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA CC_DENOM(133,1)/3/
      DATA (CC_CF(133,I, 1),I= 1,  1) /   16/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA CC_DENOM(134,1)/1/
      DATA (CC_CF(134,I, 1),I= 1,  1) /    6/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) -1
C      T(-200001,203,103) T(-200001,302,301) (no interference)
      DATA CC_DENOM(135,1)/0/
      DATA (CC_CF(135,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA CC_DENOM(136,1)/3/
      DATA (CC_CF(136,I, 1),I= 1,  1) /   -2/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1
C      T(-200001,104,204) T(-200001,301,302) (no interference)
      DATA CC_DENOM(137,1)/0/
      DATA (CC_CF(137,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA CC_DENOM(138,1)/1/
      DATA (CC_CF(138,I, 1),I= 1,  1) /   -6/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) -1
C      T(301,203,103) T(302,104,204)
      DATA CC_DENOM(139,1)/3/
      DATA (CC_CF(139,I, 1),I= 1,  1) /    2/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA CC_DENOM(140,1)/3/
      DATA (CC_CF(140,I, 1),I= 1,  1) /   -2/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA CC_DENOM(141,1)/1/
      DATA (CC_CF(141,I, 1),I= 1,  1) /    6/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1
C      T(-200001,104,204) T(-200001,302,301) (no interference)
      DATA CC_DENOM(142,1)/0/
      DATA (CC_CF(142,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) -1
C      T(301,104,204) T(302,203,103)
      DATA CC_DENOM(143,1)/3/
      DATA (CC_CF(143,I, 1),I= 1,  1) /  -16/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA CC_DENOM(144,1)/3/
      DATA (CC_CF(144,I, 1),I= 1,  1) /   16/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,301,302) (no interference)
      DATA CC_DENOM(145,1)/0/
      DATA (CC_CF(145,I, 1),I= 1,  1) /    0/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA CC_DENOM(146,1)/1/
      DATA (CC_CF(146,I, 1),I= 1,  1) /  -12/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA CC_DENOM(147,1)/1/
      DATA (CC_CF(147,I, 1),I= 1,  1) /    6/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA CC_DENOM(148,1)/1/
      DATA (CC_CF(148,I, 1),I= 1,  1) /   12/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,302,301) (no interference)
      DATA CC_DENOM(149,1)/0/
      DATA (CC_CF(149,I, 1),I= 1,  1) /    0/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA CC_DENOM(150,1)/1/
      DATA (CC_CF(150,I, 1),I= 1,  1) /   -6/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,301,302) (no interference)
      DATA CC_DENOM(151,1)/0/
      DATA (CC_CF(151,I, 1),I= 1,  1) /    0/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA CC_DENOM(152,1)/1/
      DATA (CC_CF(152,I, 1),I= 1,  1) /   12/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) -1
C      T(301,203,103) T(302,104,204)
      DATA CC_DENOM(153,1)/1/
      DATA (CC_CF(153,I, 1),I= 1,  1) /    6/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA CC_DENOM(154,1)/1/
      DATA (CC_CF(154,I, 1),I= 1,  1) /   -6/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA CC_DENOM(155,1)/1/
      DATA (CC_CF(155,I, 1),I= 1,  1) /  -12/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,302,301) (no interference)
      DATA CC_DENOM(156,1)/0/
      DATA (CC_CF(156,I, 1),I= 1,  1) /    0/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) -1
C      T(301,104,204) T(302,203,103)
      DATA CC_DENOM(157,1)/1/
      DATA (CC_CF(157,I, 1),I= 1,  1) /   -6/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA CC_DENOM(158,1)/1/
      DATA (CC_CF(158,I, 1),I= 1,  1) /    6/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA CC_DENOM(159,1)/1/
      DATA (CC_CF(159,I, 1),I= 1,  1) /   -2/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,301,302) (no interference)
      DATA CC_DENOM(160,1)/0/
      DATA (CC_CF(160,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1
C      T(302,-200001,103) T(301,203,-200001) (no interference)
      DATA CC_DENOM(161,1)/0/
      DATA (CC_CF(161,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,302,301) (no interference)
      DATA CC_DENOM(162,1)/0/
      DATA (CC_CF(162,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,302,301) (no interference)
      DATA CC_DENOM(163,1)/0/
      DATA (CC_CF(163,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1
C      T(301,-200001,103) T(302,203,-200001) (no interference)
      DATA CC_DENOM(164,1)/0/
      DATA (CC_CF(164,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA CC_DENOM(165,1)/1/
      DATA (CC_CF(165,I, 1),I= 1,  1) /    2/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,301,302) (no interference)
      DATA CC_DENOM(166,1)/0/
      DATA (CC_CF(166,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) -1
C      T(301,203,103) T(302,104,204) (no interference)
      DATA CC_DENOM(167,1)/0/
      DATA (CC_CF(167,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1
C      T(302,104,-200001) T(301,-200001,204) (no interference)
      DATA CC_DENOM(168,1)/0/
      DATA (CC_CF(168,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,302,301) (no interference)
      DATA CC_DENOM(169,1)/0/
      DATA (CC_CF(169,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,302,301) (no interference)
      DATA CC_DENOM(170,1)/0/
      DATA (CC_CF(170,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) -1
C      T(301,104,204) T(302,203,103) (no interference)
      DATA CC_DENOM(171,1)/0/
      DATA (CC_CF(171,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1
C      T(301,104,-200001) T(302,-200001,204) (no interference)
      DATA CC_DENOM(172,1)/0/
      DATA (CC_CF(172,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(301,4,104) T(302,103,3) -1 T(-200001,203,103)
C      T(-200001,301,302) (no interference)
      DATA CC_DENOM(173,1)/0/
      DATA (CC_CF(173,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(301,4,104) T(302,103,3) -1 I T(-200001,203,103)
C      f(-200001,301,302)
      DATA CC_DENOM(174,1)/1/
      DATA (CC_CF(174,I, 1),I= 1,  1) /    6/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 T(302,-200001,103)
C      T(301,203,-200001)
      DATA CC_DENOM(175,1)/3/
      DATA (CC_CF(175,I, 1),I= 1,  1) /  -16/
C     Correlator: -1 T(301,4,104) T(302,103,3) -1 I T(-200001,203,103)
C      f(-200001,302,301)
      DATA CC_DENOM(176,1)/1/
      DATA (CC_CF(176,I, 1),I= 1,  1) /   -6/
C     Correlator: -1 T(301,4,104) T(302,103,3) -1 T(-200001,203,103)
C      T(-200001,302,301) (no interference)
      DATA CC_DENOM(177,1)/0/
      DATA (CC_CF(177,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 T(301,-200001,103)
C      T(302,203,-200001)
      DATA CC_DENOM(178,1)/3/
      DATA (CC_CF(178,I, 1),I= 1,  1) /    2/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 T(-200001,104,204)
C      T(-200001,301,302) (no interference)
      DATA CC_DENOM(179,1)/0/
      DATA (CC_CF(179,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 I T(-200001,104,204)
C      f(-200001,301,302)
      DATA CC_DENOM(180,1)/1/
      DATA (CC_CF(180,I, 1),I= 1,  1) /   -6/
C     Correlator: -1 T(301,4,104) T(302,103,3) -1 T(301,203,103)
C      T(302,104,204)
      DATA CC_DENOM(181,1)/3/
      DATA (CC_CF(181,I, 1),I= 1,  1) /   -2/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 T(302,104,-200001)
C      T(301,-200001,204)
      DATA CC_DENOM(182,1)/3/
      DATA (CC_CF(182,I, 1),I= 1,  1) /    2/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 I T(-200001,104,204)
C      f(-200001,302,301)
      DATA CC_DENOM(183,1)/1/
      DATA (CC_CF(183,I, 1),I= 1,  1) /    6/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 T(-200001,104,204)
C      T(-200001,302,301) (no interference)
      DATA CC_DENOM(184,1)/0/
      DATA (CC_CF(184,I, 1),I= 1,  1) /    0/
C     Correlator: -1 T(301,4,104) T(302,103,3) -1 T(301,104,204)
C      T(302,203,103)
      DATA CC_DENOM(185,1)/3/
      DATA (CC_CF(185,I, 1),I= 1,  1) /   16/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 T(301,104,-200001)
C      T(302,-200001,204)
      DATA CC_DENOM(186,1)/3/
      DATA (CC_CF(186,I, 1),I= 1,  1) /  -16/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) -1
C      T(-200001,203,103) T(-200001,301,302) (no interference)
      DATA CC_DENOM(187,1)/0/
      DATA (CC_CF(187,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA CC_DENOM(188,1)/1/
      DATA (CC_CF(188,I, 1),I= 1,  1) /    6/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA CC_DENOM(189,1)/3/
      DATA (CC_CF(189,I, 1),I= 1,  1) /   -2/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA CC_DENOM(190,1)/1/
      DATA (CC_CF(190,I, 1),I= 1,  1) /   -6/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) -1
C      T(-200001,203,103) T(-200001,302,301) (no interference)
      DATA CC_DENOM(191,1)/0/
      DATA (CC_CF(191,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA CC_DENOM(192,1)/3/
      DATA (CC_CF(192,I, 1),I= 1,  1) /   16/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1
C      T(-200001,104,204) T(-200001,301,302) (no interference)
      DATA CC_DENOM(193,1)/0/
      DATA (CC_CF(193,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA CC_DENOM(194,1)/1/
      DATA (CC_CF(194,I, 1),I= 1,  1) /    6/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) -1
C      T(301,203,103) T(302,104,204)
      DATA CC_DENOM(195,1)/3/
      DATA (CC_CF(195,I, 1),I= 1,  1) /  -16/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA CC_DENOM(196,1)/3/
      DATA (CC_CF(196,I, 1),I= 1,  1) /   16/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA CC_DENOM(197,1)/1/
      DATA (CC_CF(197,I, 1),I= 1,  1) /   -6/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1
C      T(-200001,104,204) T(-200001,302,301) (no interference)
      DATA CC_DENOM(198,1)/0/
      DATA (CC_CF(198,I, 1),I= 1,  1) /    0/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) -1
C      T(301,104,204) T(302,203,103)
      DATA CC_DENOM(199,1)/3/
      DATA (CC_CF(199,I, 1),I= 1,  1) /    2/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA CC_DENOM(200,1)/3/
      DATA (CC_CF(200,I, 1),I= 1,  1) /   -2/

C     ----------
C     BEGIN CODE
C     ----------

      IF (N_SPIN_CORR_RUNS.GT.0) THEN
C       First copy the external wavefunction with those provided
        DO I=1,NEXTERNAL
          DO J=1,20
            W(J,I) = WEXT(J,I)
          ENDDO
        ENDDO
      ENDIF

      CALL VXXXXX(P(0,1),ZERO,NHEL(1),-1*IC(1),W(1,1))
      CALL VXXXXX(P(0,2),ZERO,NHEL(2),-1*IC(2),W(1,2))
      CALL OXXXXX(P(0,3),MDL_MT,NHEL(3),+1*IC(3),W(1,3))
      CALL IXXXXX(P(0,4),MDL_MT,NHEL(4),-1*IC(4),W(1,4))
      CALL FFV1_1(W(1,3),W(1,1),GC_2,MDL_MT,MDL_WT,W(1,5))
C     Amplitude(s) for diagram number 1
      CALL FFV1_0(W(1,4),W(1,5),W(1,2),GC_2,AMP(1))
      CALL FFV1_2(W(1,4),W(1,1),GC_2,MDL_MT,MDL_WT,W(1,5))
C     Amplitude(s) for diagram number 2
      CALL FFV1_0(W(1,5),W(1,3),W(1,2),GC_2,AMP(2))
C     JAMPs contributing to orders QCD=0 QED=2
      JAMP(1,1)=-AMP(1)-AMP(2)

      RES = 0.D0
      DO M = 1, NAMPSO
        DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO CCI=1,NCOLORCORRELATORS
            CCZTEMP(CCI) = (0.D0,0.D0)
          ENDDO
          DO J = 1, NCOLOR
            ZTEMP = ZTEMP + CF(J,I)*JAMP(J,M)
            IF (DO_INCLUDE_HEL_CONTRIB) THEN
              DO CCIA=1,COLOR_CORRELATORS_TO_CONSIDER(0)
                CCI = COLOR_CORRELATORS_TO_CONSIDER(CCIA)
                IF (CC_DENOM(CCI,1).NE.0) THEN
                  CCZTEMP(CCI) = CCZTEMP(CCI) + CC_CF(CCI,J,I)*JAMP(J
     $             ,M)
                ENDIF
              ENDDO
            ENDIF
          ENDDO
          DO N = 1, NAMPSO
            SQSOIND = SQSOINDEX_1(M,N)
            RES(SQSOIND) = RES(SQSOIND) + ZTEMP*DCONJG(JAMP(I,N))
     $       /DENOM(I)
            IF (DO_INCLUDE_HEL_CONTRIB) THEN
              DO CCIA=1,COLOR_CORRELATORS_TO_CONSIDER(0)
                CCI = COLOR_CORRELATORS_TO_CONSIDER(CCIA)
                IF (CC_DENOM(CCI,1).NE.0) THEN
                  COLOR_CORRELATED_EVALS(CCI,SQSOIND) =
     $              COLOR_CORRELATED_EVALS(CCI,SQSOIND) + CCZTEMP(CCI)
     $             *DCONJG(JAMP(I,N))/CC_DENOM(CCI,I)
                ENDIF
              ENDDO
            ENDIF
          ENDDO
        ENDDO
      ENDDO

      END

      SUBROUTINE GET_ME_1(P, ALPHAS, NHEL ,ANS)
      IMPLICIT NONE
C     
C     CONSTANT
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS
      INTEGER NHEL
      DOUBLE PRECISION ALPHAS
      REAL*8 PI
CF2PY INTENT(OUT) :: ANS
CF2PY INTENT(IN) :: NHEL
CF2PY INTENT(IN) :: P(0:3,NEXTERNAL)
CF2PY INTENT(IN) :: ALPHAS
C     ROUTINE FOR F2PY to read the benchmark point.    
C     the include file with the values of the parameters and masses 
      INCLUDE 'coupl.inc'

      PI = 3.141592653589793D0
      G = 2* DSQRT(ALPHAS*PI)
      CALL UPDATE_AS_PARAM()
      IF (NHEL.NE.0) THEN
        CALL SMATRIXHEL_1(P, NHEL, ANS)
      ELSE
        CALL SMATRIX_1(P, ANS)
      ENDIF
      RETURN
      END

      SUBROUTINE INITIALISE_1(PATH)
C     ROUTINE FOR F2PY to read the benchmark point.    
      IMPLICIT NONE
      CHARACTER*512 PATH
CF2PY INTENT(IN) :: PATH
C     USE SETPARA2 and not SETPARA so that ident_card.dat can be
C      automatically found
      CALL SETPARA2(PATH)  !first call to setup the paramaters    
      RETURN
      END

      LOGICAL FUNCTION IS_BORN_HEL_SELECTED_1(HELID)
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INTEGER    NCOMB
      PARAMETER (NCOMB=16)
C     
C     ARGUMENTS
C     
      INTEGER HELID
C     
C     LOCALS
C     
      INTEGER I,J
      LOGICAL FOUNDIT
C     
C     GLOBALS
C     
      INTEGER HELC(NEXTERNAL,NCOMB)
      COMMON/BORN_HEL_CONFIGS_1/HELC

      INTEGER POLARIZATIONS(0:NEXTERNAL,0:5)
      COMMON/BORN_BEAM_POL_1/POLARIZATIONS
C     ----------
C     BEGIN CODE
C     ----------

      IS_BORN_HEL_SELECTED_1 = .TRUE.
      IF (POLARIZATIONS(0,0).EQ.-1) THEN
        RETURN
      ENDIF

      DO I=1,NEXTERNAL
        IF (POLARIZATIONS(I,0).EQ.-1) THEN
          CYCLE
        ENDIF
        FOUNDIT = .FALSE.
        DO J=1,POLARIZATIONS(I,0)
          IF (HELC(I,HELID).EQ.POLARIZATIONS(I,J)) THEN
            FOUNDIT = .TRUE.
            EXIT
          ENDIF
        ENDDO
        IF(.NOT.FOUNDIT) THEN
          IS_BORN_HEL_SELECTED_1 = .FALSE.
          RETURN
        ENDIF
      ENDDO

      RETURN
      END


C     --------------------------------------------------------------
C     Beginning of a series of subroutine related to the evaluation
C     and steering of the computation of color-correlated MEs.
C     --------------------------------------------------------------

      SUBROUTINE GET_COLOR_CORRELATED_ME_1(CORRELATED_MES)
      IMPLICIT NONE
C     Provide access to the color correlated evaluations
      INTEGER CCI, I, J
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INTEGER NAMPSO, NSQAMPSO
      PARAMETER (NAMPSO=1, NSQAMPSO=1)
      INTEGER NCOLORCORRELATORS
      PARAMETER (NCOLORCORRELATORS=200)

      REAL*8 CORRELATED_MES(NCOLORCORRELATORS, 0:NSQAMPSO)
CF2PY INTENT(OUT) :: CORRELATED_MES

C     Index 0 is the number of correlators to consider and the next
C      indices are which one to consider
      INTEGER COLOR_CORRELATORS_TO_CONSIDER(0:NCOLORCORRELATORS)
      REAL*8 COLOR_CORRELATED_EVALS(NCOLORCORRELATORS, 0:NSQAMPSO)
      COMMON/COLOR_CORRELATIONS_1/COLOR_CORRELATORS_TO_CONSIDER,
     $  COLOR_CORRELATED_EVALS

      DO CCI=1,NCOLORCORRELATORS
        DO J=0,NSQAMPSO
          CORRELATED_MES(CCI, J) = COLOR_CORRELATED_EVALS(CCI, J)
        ENDDO
      ENDDO

      END

      SUBROUTINE GET_COLOR_CORRELATOR_ID_1(CONNECTION_INDEX_A,
     $  CONNECTION_INDEX_B, ID)
      IMPLICIT NONE

      INTEGER NCOLORCORRELATORS
      PARAMETER (NCOLORCORRELATORS=200)
      INTEGER NCOLORCONNECTIONS
      PARAMETER (NCOLORCONNECTIONS=16)

      INTEGER CONNECTION_INDEX_A, CONNECTION_INDEX_B, ID, IDX
CF2PY INTENT(IN) :: CONNECTION_INDEX_A
CF2PY INTENT(IN) :: CONNECTION_INDEX_B
CF2PY INTENT(OUT) :: ID

      INTEGER COLOR_CORRELATOR_TO_INDEX(NCOLORCONNECTIONS
     $ ,NCOLORCONNECTIONS)
      INTEGER CORRELATOR_INDEX_TO_CONNECTION_INDEX(NCOLORCORRELATORS,
     $  2)
      COMMON/COLOR_CORRELATION_MAPS_1/COLOR_CORRELATOR_TO_INDEX,
     $  CORRELATOR_INDEX_TO_CONNECTION_INDEX

      IDX = COLOR_CORRELATOR_TO_INDEX(CONNECTION_INDEX_A,
     $  CONNECTION_INDEX_B)

      IF (IDX.LE.0) THEN
        ID = -1
      ELSE
        ID = IDX
      ENDIF

      END

      SUBROUTINE GET_COLOR_CORRELATOR_FOR_ID_1(IDX, CONNECTION_INDEX_A,
     $  CONNECTION_INDEX_B)
      IMPLICIT NONE

      INTEGER NCOLORCORRELATORS
      PARAMETER (NCOLORCORRELATORS=200)
      INTEGER NCOLORCONNECTIONS
      PARAMETER (NCOLORCONNECTIONS=16)

      INTEGER CONNECTION_INDEX_A, CONNECTION_INDEX_B, IDX
CF2PY INTENT(IN) :: IDX
CF2PY INTENT(OUT) :: CONNECTION_INDEX_A
CF2PY INTENT(OUT) :: CONNECTION_INDEX_B

      INTEGER COLOR_CORRELATOR_TO_INDEX(NCOLORCONNECTIONS
     $ ,NCOLORCONNECTIONS)
      INTEGER CORRELATOR_INDEX_TO_CONNECTION_INDEX(NCOLORCORRELATORS,
     $  2)
      COMMON/COLOR_CORRELATION_MAPS_1/COLOR_CORRELATOR_TO_INDEX,
     $  CORRELATOR_INDEX_TO_CONNECTION_INDEX

      CONNECTION_INDEX_A = CORRELATOR_INDEX_TO_CONNECTION_INDEX(IDX, 1)
      CONNECTION_INDEX_B = CORRELATOR_INDEX_TO_CONNECTION_INDEX(IDX, 2)

      END

      SUBROUTINE GET_N_COLOR_CORRELATORS_1(N_COLOR_CORRELATORS)
C     Provide access to the number of color correlators

      INTEGER N_COLOR_CORRELATORS
CF2PY INTENT(OUT) :: N_COLOR_CORRELATORS

      INTEGER NCOLORCORRELATORS
      PARAMETER (NCOLORCORRELATORS=200)

      N_COLOR_CORRELATORS = NCOLORCORRELATORS

      END

      SUBROUTINE ADD_COLOR_CORRELATORS_TO_CONSIDER_1(FIRST_CONNECTION,
     $  SECOND_CONNECTION)
      IMPLICIT NONE
C     Adds a color correlator to compute. All leg indices must be
C      positive in this case.

      INTEGER NCOLORCORRELATORS
      PARAMETER (NCOLORCORRELATORS=200)
      INTEGER NCOLORCONNECTIONS
      PARAMETER (NCOLORCONNECTIONS=16)

      INTEGER FIRST_CONNECTION, SECOND_CONNECTION
CF2PY INTENT(IN) :: FIRST_CONNECTION
CF2PY INTENT(IN) :: SECOND_CONNECTION

      INTEGER COLOR_CORRELATOR_TO_INDEX(NCOLORCONNECTIONS
     $ ,NCOLORCONNECTIONS)
      INTEGER CORRELATOR_INDEX_TO_CONNECTION_INDEX(NCOLORCORRELATORS,
     $  2)
      COMMON/COLOR_CORRELATION_MAPS_1/COLOR_CORRELATOR_TO_INDEX,
     $  CORRELATOR_INDEX_TO_CONNECTION_INDEX

C     Index 0 is the number of correlators to consider and the next
C      indices are which one to consider
      INTEGER COLOR_CORRELATORS_TO_CONSIDER(0:NCOLORCORRELATORS)
      REAL*8 COLOR_CORRELATED_EVALS(NCOLORCORRELATORS)
      COMMON/COLOR_CORRELATIONS_1/COLOR_CORRELATORS_TO_CONSIDER,
     $  COLOR_CORRELATED_EVALS

C     ----------
C     BEGIN CODE
C     ----------

      IF (COLOR_CORRELATORS_TO_CONSIDER(0).GE.NCOLORCORRELATORS) THEN
        WRITE(*,*) 'Cannot add more color correlators to consider than'
     $   //' there are color correlators.'
        STOP
      ENDIF

      COLOR_CORRELATORS_TO_CONSIDER(0) = COLOR_CORRELATORS_TO_CONSIDER
     $ (0) +1
      COLOR_CORRELATORS_TO_CONSIDER(COLOR_CORRELATORS_TO_CONSIDER(0))
     $  = COLOR_CORRELATOR_TO_INDEX(FIRST_CONNECTION,
     $  SECOND_CONNECTION)

      END SUBROUTINE

      SUBROUTINE SET_COLOR_CORRELATORS_TO_CONSIDER_1(FIRST_CONNECTION,
     $  SECOND_CONNECTION)
      IMPLICIT NONE
C     Sets which color correlators to compute. If both connections are
C      specified, this will select only one.
C     For each leg index set to -1, we will span the entire set of
C      connections for that leg index.

      INTEGER FIRST_CONNECTION, SECOND_CONNECTION
CF2PY INTENT(IN) :: FIRST_CONNECTION
CF2PY INTENT(IN) :: SECOND_CONNECTION

      INTEGER NAMPSO, NSQAMPSO
      PARAMETER (NAMPSO=1, NSQAMPSO=1)
      INTEGER NCOLORCORRELATORS
      PARAMETER (NCOLORCORRELATORS=200)
      INTEGER NCOLORCONNECTIONS
      PARAMETER (NCOLORCONNECTIONS=16)

      INTEGER I, J, K, NCC_TO_CONSIDER, CC_TO_ADD
      LOGICAL FOUNDIT

      INTEGER COLOR_CORRELATOR_TO_INDEX(NCOLORCONNECTIONS
     $ ,NCOLORCONNECTIONS)
      DATA (COLOR_CORRELATOR_TO_INDEX(1, I), I=1,NCOLORCONNECTIONS) /
     $  1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 /
      DATA (COLOR_CORRELATOR_TO_INDEX(2, I), I=1,NCOLORCONNECTIONS) /
     $  3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 /
      DATA (COLOR_CORRELATOR_TO_INDEX(3, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 /
      DATA (COLOR_CORRELATOR_TO_INDEX(4, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 /
      DATA (COLOR_CORRELATOR_TO_INDEX(5, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 /
      DATA (COLOR_CORRELATOR_TO_INDEX(6, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 /
      DATA (COLOR_CORRELATOR_TO_INDEX(7, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74 /
      DATA (COLOR_CORRELATOR_TO_INDEX(8, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88 /
      DATA (COLOR_CORRELATOR_TO_INDEX(9, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
     $  102 /
      DATA (COLOR_CORRELATOR_TO_INDEX(10, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
     $  114, 115, 116 /
      DATA (COLOR_CORRELATOR_TO_INDEX(11, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
     $  128, 129, 130 /
      DATA (COLOR_CORRELATOR_TO_INDEX(12, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
     $  142, 143, 144 /
      DATA (COLOR_CORRELATOR_TO_INDEX(13, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
     $  156, 157, 158 /
      DATA (COLOR_CORRELATOR_TO_INDEX(14, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
     $  170, 171, 172 /
      DATA (COLOR_CORRELATOR_TO_INDEX(15, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
     $  184, 185, 186 /
      DATA (COLOR_CORRELATOR_TO_INDEX(16, I), I=1,NCOLORCONNECTIONS) /
     $  0, 0, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
     $  198, 199, 200 /

      INTEGER CORRELATOR_INDEX_TO_CONNECTION_INDEX(NCOLORCORRELATORS,
     $  2)
C     Correlator: -1 T(301,103,3) -1 T(301,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(1, I), I=1,2) / 1, 1/
C     Correlator: -1 T(301,103,3) 1 T(301,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(2, I), I=1,2) / 1, 2/
C     Correlator: 1 T(301,4,104) -1 T(301,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(3, I), I=1,2) / 2, 1/
C     Correlator: 1 T(301,4,104) 1 T(301,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(4, I), I=1,2) / 2, 2/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(5, I), I=1,2) / 3, 3/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(6, I), I=1,2) / 3, 4/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(7, I), I=1,2) / 3, 5/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(8, I), I=1,2) / 3, 6/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(9, I), I=1,2) / 3, 7/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(10, I), I=1,2) / 3, 8/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(11, I), I=1,2) / 3, 9/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(12, I), I=1,2) / 3,
     $  10/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) -1
C      T(301,203,103) T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(13, I), I=1,2) / 3,
     $  11/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(14, I), I=1,2) / 3,
     $  12/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(15, I), I=1,2) / 3,
     $  13/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(16, I), I=1,2) / 3,
     $  14/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) -1
C      T(301,104,204) T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(17, I), I=1,2) / 3,
     $  15/
C     Correlator: -1 T(-100001,103,3) T(-100001,301,302) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(18, I), I=1,2) / 3,
     $  16/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(19, I), I=1,2) / 4, 3/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(20, I), I=1,2) / 4, 4/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(21, I), I=1,2) / 4, 5/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(22, I), I=1,2) / 4, 6/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(23, I), I=1,2) / 4, 7/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(24, I), I=1,2) / 4, 8/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(25, I), I=1,2) / 4, 9/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(26, I), I=1,2) / 4,
     $  10/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) -1
C      T(301,203,103) T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(27, I), I=1,2) / 4,
     $  11/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(28, I), I=1,2) / 4,
     $  12/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(29, I), I=1,2) / 4,
     $  13/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(30, I), I=1,2) / 4,
     $  14/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) -1
C      T(301,104,204) T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(31, I), I=1,2) / 4,
     $  15/
C     Correlator: -1 I T(-100001,103,3) f(-100001,301,302) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(32, I), I=1,2) / 4,
     $  16/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(33, I), I=1,2) / 5, 3/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(34, I), I=1,2) / 5, 4/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(35, I), I=1,2) / 5, 5/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(36, I), I=1,2) / 5, 6/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(37, I), I=1,2) / 5, 7/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(38, I), I=1,2) / 5, 8/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(39, I), I=1,2) / 5, 9/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(40, I), I=1,2) / 5,
     $  10/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) -1
C      T(301,203,103) T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(41, I), I=1,2) / 5,
     $  11/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(42, I), I=1,2) / 5,
     $  12/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(43, I), I=1,2) / 5,
     $  13/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(44, I), I=1,2) / 5,
     $  14/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) -1
C      T(301,104,204) T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(45, I), I=1,2) / 5,
     $  15/
C     Correlator: 1 T(302,-100001,3) T(301,103,-100001) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(46, I), I=1,2) / 5,
     $  16/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(47, I), I=1,2) / 6, 3/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(48, I), I=1,2) / 6, 4/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(49, I), I=1,2) / 6, 5/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(50, I), I=1,2) / 6, 6/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(51, I), I=1,2) / 6, 7/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(52, I), I=1,2) / 6, 8/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(53, I), I=1,2) / 6, 9/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(54, I), I=1,2) / 6,
     $  10/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) -1
C      T(301,203,103) T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(55, I), I=1,2) / 6,
     $  11/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(56, I), I=1,2) / 6,
     $  12/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(57, I), I=1,2) / 6,
     $  13/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(58, I), I=1,2) / 6,
     $  14/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) -1
C      T(301,104,204) T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(59, I), I=1,2) / 6,
     $  15/
C     Correlator: -1 I T(-100001,103,3) f(-100001,302,301) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(60, I), I=1,2) / 6,
     $  16/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(61, I), I=1,2) / 7, 3/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(62, I), I=1,2) / 7, 4/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(63, I), I=1,2) / 7, 5/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(64, I), I=1,2) / 7, 6/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(65, I), I=1,2) / 7, 7/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(66, I), I=1,2) / 7, 8/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(67, I), I=1,2) / 7, 9/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(68, I), I=1,2) / 7,
     $  10/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) -1
C      T(301,203,103) T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(69, I), I=1,2) / 7,
     $  11/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(70, I), I=1,2) / 7,
     $  12/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(71, I), I=1,2) / 7,
     $  13/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(72, I), I=1,2) / 7,
     $  14/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) -1
C      T(301,104,204) T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(73, I), I=1,2) / 7,
     $  15/
C     Correlator: -1 T(-100001,103,3) T(-100001,302,301) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(74, I), I=1,2) / 7,
     $  16/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(75, I), I=1,2) / 8, 3/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(76, I), I=1,2) / 8, 4/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(77, I), I=1,2) / 8, 5/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(78, I), I=1,2) / 8, 6/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(79, I), I=1,2) / 8, 7/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(80, I), I=1,2) / 8, 8/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(81, I), I=1,2) / 8, 9/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(82, I), I=1,2) / 8,
     $  10/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) -1
C      T(301,203,103) T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(83, I), I=1,2) / 8,
     $  11/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(84, I), I=1,2) / 8,
     $  12/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(85, I), I=1,2) / 8,
     $  13/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(86, I), I=1,2) / 8,
     $  14/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) -1
C      T(301,104,204) T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(87, I), I=1,2) / 8,
     $  15/
C     Correlator: 1 T(301,-100001,3) T(302,103,-100001) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(88, I), I=1,2) / 8,
     $  16/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(89, I), I=1,2) / 9, 3/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(90, I), I=1,2) / 9, 4/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(91, I), I=1,2) / 9, 5/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(92, I), I=1,2) / 9, 6/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(93, I), I=1,2) / 9, 7/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(94, I), I=1,2) / 9, 8/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(95, I), I=1,2) / 9, 9/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(96, I), I=1,2) / 9,
     $  10/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) -1
C      T(301,203,103) T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(97, I), I=1,2) / 9,
     $  11/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(98, I), I=1,2) / 9,
     $  12/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(99, I), I=1,2) / 9,
     $  13/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(100, I), I=1,2) / 9,
     $  14/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) -1
C      T(301,104,204) T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(101, I), I=1,2) / 9,
     $  15/
C     Correlator: 1 T(-100001,4,104) T(-100001,301,302) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(102, I), I=1,2) / 9,
     $  16/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(103, I), I=1,2) / 10,
     $  3/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(104, I), I=1,2) / 10,
     $  4/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(105, I), I=1,2) / 10,
     $  5/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(106, I), I=1,2) / 10,
     $  6/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(107, I), I=1,2) / 10,
     $  7/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(108, I), I=1,2) / 10,
     $  8/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(109, I), I=1,2) / 10,
     $  9/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(110, I), I=1,2) / 10,
     $  10/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) -1
C      T(301,203,103) T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(111, I), I=1,2) / 10,
     $  11/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(112, I), I=1,2) / 10,
     $  12/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(113, I), I=1,2) / 10,
     $  13/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(114, I), I=1,2) / 10,
     $  14/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) -1
C      T(301,104,204) T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(115, I), I=1,2) / 10,
     $  15/
C     Correlator: 1 I T(-100001,4,104) f(-100001,301,302) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(116, I), I=1,2) / 10,
     $  16/
C     Correlator: -1 T(301,103,3) T(302,4,104) -1 T(-200001,203,103)
C      T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(117, I), I=1,2) / 11,
     $  3/
C     Correlator: -1 T(301,103,3) T(302,4,104) -1 I T(-200001,203,103)
C      f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(118, I), I=1,2) / 11,
     $  4/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 T(302,-200001,103)
C      T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(119, I), I=1,2) / 11,
     $  5/
C     Correlator: -1 T(301,103,3) T(302,4,104) -1 I T(-200001,203,103)
C      f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(120, I), I=1,2) / 11,
     $  6/
C     Correlator: -1 T(301,103,3) T(302,4,104) -1 T(-200001,203,103)
C      T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(121, I), I=1,2) / 11,
     $  7/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 T(301,-200001,103)
C      T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(122, I), I=1,2) / 11,
     $  8/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 T(-200001,104,204)
C      T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(123, I), I=1,2) / 11,
     $  9/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 I T(-200001,104,204)
C      f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(124, I), I=1,2) / 11,
     $  10/
C     Correlator: -1 T(301,103,3) T(302,4,104) -1 T(301,203,103)
C      T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(125, I), I=1,2) / 11,
     $  11/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 T(302,104,-200001)
C      T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(126, I), I=1,2) / 11,
     $  12/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 I T(-200001,104,204)
C      f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(127, I), I=1,2) / 11,
     $  13/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 T(-200001,104,204)
C      T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(128, I), I=1,2) / 11,
     $  14/
C     Correlator: -1 T(301,103,3) T(302,4,104) -1 T(301,104,204)
C      T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(129, I), I=1,2) / 11,
     $  15/
C     Correlator: -1 T(301,103,3) T(302,4,104) 1 T(301,104,-200001)
C      T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(130, I), I=1,2) / 11,
     $  16/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(131, I), I=1,2) / 12,
     $  3/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(132, I), I=1,2) / 12,
     $  4/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(133, I), I=1,2) / 12,
     $  5/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(134, I), I=1,2) / 12,
     $  6/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(135, I), I=1,2) / 12,
     $  7/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(136, I), I=1,2) / 12,
     $  8/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(137, I), I=1,2) / 12,
     $  9/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(138, I), I=1,2) / 12,
     $  10/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) -1
C      T(301,203,103) T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(139, I), I=1,2) / 12,
     $  11/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(140, I), I=1,2) / 12,
     $  12/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(141, I), I=1,2) / 12,
     $  13/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(142, I), I=1,2) / 12,
     $  14/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) -1
C      T(301,104,204) T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(143, I), I=1,2) / 12,
     $  15/
C     Correlator: 1 T(302,4,-100001) T(301,-100001,104) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(144, I), I=1,2) / 12,
     $  16/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(145, I), I=1,2) / 13,
     $  3/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(146, I), I=1,2) / 13,
     $  4/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(147, I), I=1,2) / 13,
     $  5/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(148, I), I=1,2) / 13,
     $  6/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(149, I), I=1,2) / 13,
     $  7/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(150, I), I=1,2) / 13,
     $  8/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(151, I), I=1,2) / 13,
     $  9/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(152, I), I=1,2) / 13,
     $  10/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) -1
C      T(301,203,103) T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(153, I), I=1,2) / 13,
     $  11/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(154, I), I=1,2) / 13,
     $  12/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(155, I), I=1,2) / 13,
     $  13/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(156, I), I=1,2) / 13,
     $  14/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) -1
C      T(301,104,204) T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(157, I), I=1,2) / 13,
     $  15/
C     Correlator: 1 I T(-100001,4,104) f(-100001,302,301) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(158, I), I=1,2) / 13,
     $  16/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(159, I), I=1,2) / 14,
     $  3/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(160, I), I=1,2) / 14,
     $  4/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(161, I), I=1,2) / 14,
     $  5/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(162, I), I=1,2) / 14,
     $  6/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(163, I), I=1,2) / 14,
     $  7/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(164, I), I=1,2) / 14,
     $  8/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(165, I), I=1,2) / 14,
     $  9/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(166, I), I=1,2) / 14,
     $  10/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) -1
C      T(301,203,103) T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(167, I), I=1,2) / 14,
     $  11/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(168, I), I=1,2) / 14,
     $  12/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(169, I), I=1,2) / 14,
     $  13/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(170, I), I=1,2) / 14,
     $  14/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) -1
C      T(301,104,204) T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(171, I), I=1,2) / 14,
     $  15/
C     Correlator: 1 T(-100001,4,104) T(-100001,302,301) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(172, I), I=1,2) / 14,
     $  16/
C     Correlator: -1 T(301,4,104) T(302,103,3) -1 T(-200001,203,103)
C      T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(173, I), I=1,2) / 15,
     $  3/
C     Correlator: -1 T(301,4,104) T(302,103,3) -1 I T(-200001,203,103)
C      f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(174, I), I=1,2) / 15,
     $  4/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 T(302,-200001,103)
C      T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(175, I), I=1,2) / 15,
     $  5/
C     Correlator: -1 T(301,4,104) T(302,103,3) -1 I T(-200001,203,103)
C      f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(176, I), I=1,2) / 15,
     $  6/
C     Correlator: -1 T(301,4,104) T(302,103,3) -1 T(-200001,203,103)
C      T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(177, I), I=1,2) / 15,
     $  7/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 T(301,-200001,103)
C      T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(178, I), I=1,2) / 15,
     $  8/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 T(-200001,104,204)
C      T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(179, I), I=1,2) / 15,
     $  9/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 I T(-200001,104,204)
C      f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(180, I), I=1,2) / 15,
     $  10/
C     Correlator: -1 T(301,4,104) T(302,103,3) -1 T(301,203,103)
C      T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(181, I), I=1,2) / 15,
     $  11/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 T(302,104,-200001)
C      T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(182, I), I=1,2) / 15,
     $  12/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 I T(-200001,104,204)
C      f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(183, I), I=1,2) / 15,
     $  13/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 T(-200001,104,204)
C      T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(184, I), I=1,2) / 15,
     $  14/
C     Correlator: -1 T(301,4,104) T(302,103,3) -1 T(301,104,204)
C      T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(185, I), I=1,2) / 15,
     $  15/
C     Correlator: -1 T(301,4,104) T(302,103,3) 1 T(301,104,-200001)
C      T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(186, I), I=1,2) / 15,
     $  16/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) -1
C      T(-200001,203,103) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(187, I), I=1,2) / 16,
     $  3/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) -1 I
C      T(-200001,203,103) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(188, I), I=1,2) / 16,
     $  4/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1
C      T(302,-200001,103) T(301,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(189, I), I=1,2) / 16,
     $  5/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) -1 I
C      T(-200001,203,103) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(190, I), I=1,2) / 16,
     $  6/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) -1
C      T(-200001,203,103) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(191, I), I=1,2) / 16,
     $  7/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1
C      T(301,-200001,103) T(302,203,-200001)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(192, I), I=1,2) / 16,
     $  8/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1
C      T(-200001,104,204) T(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(193, I), I=1,2) / 16,
     $  9/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1 I
C      T(-200001,104,204) f(-200001,301,302)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(194, I), I=1,2) / 16,
     $  10/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) -1
C      T(301,203,103) T(302,104,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(195, I), I=1,2) / 16,
     $  11/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1
C      T(302,104,-200001) T(301,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(196, I), I=1,2) / 16,
     $  12/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1 I
C      T(-200001,104,204) f(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(197, I), I=1,2) / 16,
     $  13/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1
C      T(-200001,104,204) T(-200001,302,301)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(198, I), I=1,2) / 16,
     $  14/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) -1
C      T(301,104,204) T(302,203,103)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(199, I), I=1,2) / 16,
     $  15/
C     Correlator: 1 T(301,4,-100001) T(302,-100001,104) 1
C      T(301,104,-200001) T(302,-200001,204)
      DATA (CORRELATOR_INDEX_TO_CONNECTION_INDEX(200, I), I=1,2) / 16,
     $  16/

      COMMON/COLOR_CORRELATION_MAPS_1/COLOR_CORRELATOR_TO_INDEX,
     $  CORRELATOR_INDEX_TO_CONNECTION_INDEX

C     Index 0 is the number of correlators to consider and the next
C      indices are which one to consider
      INTEGER COLOR_CORRELATORS_TO_CONSIDER(0:NCOLORCORRELATORS)
      REAL*8 COLOR_CORRELATED_EVALS(NCOLORCORRELATORS, 0:NSQAMPSO)
      COMMON/COLOR_CORRELATIONS_1/COLOR_CORRELATORS_TO_CONSIDER,
     $  COLOR_CORRELATED_EVALS

      NCC_TO_CONSIDER = 0

C     First reset the array
      COLOR_CORRELATORS_TO_CONSIDER(0) = 0
      DO I=1,NCOLORCORRELATORS
        COLOR_CORRELATORS_TO_CONSIDER(I) = -1
      ENDDO

C     Index 0 on the first leg simply indicate the desire to reset the
C      selection
      IF (FIRST_CONNECTION.EQ.0) THEN
        RETURN
      ENDIF

      DO I=1, NCOLORCONNECTIONS
        IF (FIRST_CONNECTION.NE.-1.AND.FIRST_CONNECTION.NE.I) THEN
          CYCLE
        ENDIF
        DO J=1, NCOLORCONNECTIONS
          IF (SECOND_CONNECTION.NE.-1.AND.SECOND_CONNECTION.NE.J) THEN
            CYCLE
          ENDIF
C         Normally all those correlators should be found, even though
C          some might have not
C         have a contributing interference  
          CC_TO_ADD = COLOR_CORRELATOR_TO_INDEX(I,J)
          IF (CC_TO_ADD.LE.0) THEN
            CYCLE
          ENDIF
C         Now make sure we have not considered it yet, since (i, j)
C          maps to (j, i) in these correlators
          FOUNDIT = .FALSE.
          DO K=1,COLOR_CORRELATORS_TO_CONSIDER(0)
            IF (COLOR_CORRELATORS_TO_CONSIDER(K).EQ.CC_TO_ADD) THEN
              FOUNDIT = .TRUE.
              EXIT
            ENDIF
          ENDDO
          IF (FOUNDIT) THEN
            CYCLE
          ENDIF
          NCC_TO_CONSIDER = NCC_TO_CONSIDER+1
          COLOR_CORRELATORS_TO_CONSIDER(0) = NCC_TO_CONSIDER
          COLOR_CORRELATORS_TO_CONSIDER(NCC_TO_CONSIDER) = CC_TO_ADD
        ENDDO
      ENDDO

      END

C     --------------------------------------------------------------
C     Beginning of a series of subroutine related to the evaluation
C     and steering of the computation of spin-correlated MEs.
C     --------------------------------------------------------------

      SUBROUTINE SET_SPIN_CORRELATION_VECTORS_1(LEG_INDEX, N_VECTORS,
     $  VECTORS)
      IMPLICIT NONE
C     Sets a list of up to MAX_N_VECTORS to use instead of the
C      polarization vectors for leg number LEG_INDEX
C     Notice that of course only fermions and vectors can be assigned
C      correlations here.

C     
C     CONSTANTS AND GLOBALS
C     

      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INCLUDE 'spin_correlations.inc'

C     
C     ARGUMENTS
C     
      INTEGER LEG_INDEX
      INTEGER N_VECTORS
      REAL*8 VECTORS(MAX_N_SPIN_CORR_VECTORS,4)
CF2PY INTENT(IN) :: LEG_INDEX
CF2PY INTENT(IN) :: N_VECTORS
CF2PY INTENT(IN) :: VECTORS

C     
C     LOCAL VARIABLES
C     

      INTEGER I,J,N
      INTEGER NEW_N_SPIN_CORR_RUNS
      INTEGER N_LEGS_WITH_SPIN_CORRELATORS

C     
C     GLOBAL ARRAYS INITIALIZATION
C     

      INTEGER SPIN_CORR_VECTORS_N_ENTRIES
      PARAMETER (SPIN_CORR_VECTORS_N_ENTRIES=(4*NEXTERNAL*MAX_N_SPIN_CO
     $RR_VECTORS))
      DATA SPIN_CORR_VECTORS/SPIN_CORR_VECTORS_N_ENTRIES*0.0D0/
      DATA N_SPIN_CORR_VECTORS/NEXTERNAL*0/
      INTEGER SPIN_CORR_RUNS_N_ENTRIES
      PARAMETER (SPIN_CORR_RUNS_N_ENTRIES=(MAX_SPIN_CORR_RUNS+1)
     $ *NEXTERNAL)
C     The integer -1000 will indicate to simply keep the original
C      helicity polarization vector assigned to that leg      
      DATA SPIN_CORR_RUNS/SPIN_CORR_RUNS_N_ENTRIES*-1000/
      DATA N_SPIN_CORR_RUNS/0/

      INTEGER NEW_SPIN_CORR_RUNS(0:MAX_SPIN_CORR_RUNS,NEXTERNAL)

C     ----------
C     BEGIN CODE
C     ----------

C     Make sure the user does not try to set the spin-correlation
C      vectors of a leg again
      IF (N_SPIN_CORR_VECTORS(LEG_INDEX).NE.0) THEN
        WRITE(*,*) 'Cannot define for a second time the spin'
     $   //'-correlation vectors of a lef. Call the subroutine'
     $   //' RESET_SPIN_CORRELATION_VECTORS() first.'
        STOP
      ENDIF

C     Make sure it does not exceed the maximum number of legs that can
C      get spin correlators assigned.
      N_LEGS_WITH_SPIN_CORRELATORS = 0
      DO I=1,NEXTERNAL
        IF (N_SPIN_CORR_VECTORS(I).GT.0) THEN
          N_LEGS_WITH_SPIN_CORRELATORS = N_LEGS_WITH_SPIN_CORRELATORS 
     $     + 1
        ENDIF
      ENDDO
      IF (N_LEGS_WITH_SPIN_CORRELATORS.GE.MAX_LEGS_WITH_SPIN_CORR) THEN
        WRITE(*,*) 'In the current output, only a maximum of '
     $   ,MAX_LEGS_WITH_SPIN_CORR,' can be assigned spin-correlations.'
        WRITE(*,*) 'Change the parameter MAX_LEGS_WITH_SPIN_CORR in'
     $   //' spin_correlations.inc or re-generate the process with a'
     $   //' higher power of N for the option --spin_correlators=N^iLO'
        STOP
      ENDIF

C     First add the vectors to the list of spin-correlation vectors
C      defined
      N_SPIN_CORR_VECTORS(LEG_INDEX) = N_VECTORS
      DO I=1,N_VECTORS
        DO J=1,4
C         Leave the flexibility of having these vectors complex,
C          although we take them real here.
          SPIN_CORR_VECTORS(LEG_INDEX,I,J) = DCMPLX(VECTORS(I,J),0.0D0)
        ENDDO
      ENDDO

C     Now assign the additional runs to be performed within the loop
C      over helicity configuration so as to capture these
C      spin-correlations.
C     First initialise the new runs to empty
      DO I=0, MAX_SPIN_CORR_RUNS
        DO J=1,NEXTERNAL
          NEW_SPIN_CORR_RUNS(I,J) = -1000
        ENDDO
      ENDDO
      NEW_N_SPIN_CORR_RUNS = 0

C     Now recompute what are the spin-correlated runs to be performed
C      within the loop over helicity configuration so as to capture
C      these spin-correlations.
      DO I=1,N_VECTORS
C       Add a run for each of the existing ones. This means that if
C        user specifies vector VEC1A and VEC1B for leg 1, and VEC2A
C        and VEC2B for leg 2, we will include all 4 combinations.
C        (VEC1A, VEC2A), (VEC1A, VEC2B), etc...
C       The MIN(1,N_SPIN_CORR_RUNS) is just here because the first
C        time we add spin correlation we must start from the blank
C        entries in SPIN_CORR_RUNS(0,*)
        DO J=MIN(1,N_SPIN_CORR_RUNS),N_SPIN_CORR_RUNS
          NEW_N_SPIN_CORR_RUNS = NEW_N_SPIN_CORR_RUNS + 1
          DO N=1,NEXTERNAL
            IF (N.EQ.LEG_INDEX) THEN
C             If the leg is the one selected, enforce the vectors
C              specified by the user
              NEW_SPIN_CORR_RUNS(NEW_N_SPIN_CORR_RUNS,N) = I
            ELSE
C             Otherwise, just copy the ones of the previous runs.
              NEW_SPIN_CORR_RUNS(NEW_N_SPIN_CORR_RUNS,N) =
     $          SPIN_CORR_RUNS(J,N)
            ENDIF
          ENDDO
        ENDDO
      ENDDO

C     That's it, the new runs featuring the combination of previously
C      defined spin correlation vectors with the new ones can be set
C      to SPIN_CORR_RUNS
      N_SPIN_CORR_RUNS = NEW_N_SPIN_CORR_RUNS
      DO I=0, N_SPIN_CORR_RUNS
        DO J=1, NEXTERNAL
          SPIN_CORR_RUNS(I,J) = NEW_SPIN_CORR_RUNS(I,J)
        ENDDO
      ENDDO

      END SUBROUTINE

      SUBROUTINE RESET_SPIN_CORRELATION_VECTORS_1()
      IMPLICIT NONE
C     Resets the spin correlation vectors definition

C     
C     CONSTANTS AND GLOBALS
C     

      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INCLUDE 'spin_correlations.inc'

C     
C     LOCAL VARIABLES
C     

      INTEGER I,J,N

C     ----------
C     BEGIN CODE
C     ----------

      DO N=1,NEXTERNAL
        N_SPIN_CORR_VECTORS(N) = 0
        DO I=1,MAX_N_SPIN_CORR_VECTORS
          DO J=1,4
            SPIN_CORR_VECTORS(N,I,J) = 0.0D0
          ENDDO
        ENDDO
      ENDDO

      N_SPIN_CORR_RUNS = 0
      DO I=1,MAX_SPIN_CORR_RUNS
        DO J=1,NEXTERNAL
          SPIN_CORR_RUNS(I,J) = -1000
        ENDDO
      ENDDO

      END SUBROUTINE

      SUBROUTINE GET_MAX_N_SPIN_CORR_VECTORS_1(MAX_N_SC_VECTORS)
      IMPLICIT NONE
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INCLUDE 'spin_correlations.inc'
      INTEGER MAX_N_SC_VECTORS
CF2PY INTENT(OUT) :: MAX_N_SC_VECTORS
      MAX_N_SC_VECTORS = MAX_N_SPIN_CORR_VECTORS
      END SUBROUTINE

      SUBROUTINE GET_MAX_N_SPIN_CORR_LEGS_1(MAX_N_SC_LEGS)
      IMPLICIT NONE
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INCLUDE 'spin_correlations.inc'
      INTEGER MAX_N_SC_LEGS
CF2PY INTENT(OUT) :: MAX_N_SC_LEGS
      MAX_N_SC_LEGS = MAX_LEGS_WITH_SPIN_CORR
      END SUBROUTINE

      SUBROUTINE GET_COLOR_CONNECTION_MAX_ORDER_1(MAX_ORDER)
      IMPLICIT NONE
      INTEGER CC_MAX_ORDER
      PARAMETER (CC_MAX_ORDER=2)
      INTEGER MAX_ORDER
CF2PY INTENT(OUT) :: MAX_ORDER
      MAX_ORDER = CC_MAX_ORDER
      END SUBROUTINE

C     Now routines to map the specification of the color connections
C      at each order to a 
C     unique index.
C     
C     NOTE:
C     -----
C     
C     Given the list of k triplets (i,j,k) at N^kLO, returns the index
C      of corresponding color connection
C     See documentation of the function 'generate_all_color_connections'
C     //'' in the file madgraph/core/color_amp.py for the meaning of
C      these triplets.
C     To be more concise the mapping here will be saved with a doublet
C      only, where the differentiation between the g > q q~ and g > g
C      g splitting is not done like this:
C     g > g g  --> (-1,-2,-1)
C     vs
C     g > q q~ --> (-1,-1,-2)
C     but instead is represented by the following two doublets instead:
C     g > g g  --> (-1,-2)
C     vs
C     g > q q~ --> (-1,+2)
C     so the information about inforcing a 'q q~' splitting is carried
C      by the sign of the second entry which would otherwise always be
C      negative.
C     For all other splittings (q > q g and q~ > q~ g), the last entry
C      is always the same as the first, so there is no loss of
C      information.
C     
C     Definition of the color connection to index subroutines starts
C      now
C     -----------------------------------------------------------------
C     -
C     
C     =========================================================
C     Mapping of NLO color connections to a unique index
C     =========================================================

      SUBROUTINE GET_N_COLOR_CONNECTIONS_NLO_1(N_CC)
      IMPLICIT NONE
      INTEGER N_CC_FOR_THAT_ORDER
      PARAMETER (N_CC_FOR_THAT_ORDER=2)
      INTEGER N_CC
CF2PY INTENT(OUT) :: N_CC
      N_CC = N_CC_FOR_THAT_ORDER
      END SUBROUTINE

      SUBROUTINE APPLY_COLOR_CONNECTION_DEFINITIONS_NLO_1()
C     This routine initialise the mapping of the color connections for
C      order NLO

      INTEGER    PERT_ORDER
      PARAMETER (PERT_ORDER=1)
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INTEGER    N_CC_DEFINITION_ENTRIES
      PARAMETER (N_CC_DEFINITION_ENTRIES=NEXTERNAL*PERT_ORDER)

      INTEGER COLOR_CONNECTIONS(NEXTERNAL,-PERT_ORDER:-1)
      LOGICAL COLOR_CONNECTION_INITIALIZED
C     If the color connection doesn't exist, the index returned will
C      be zero
      DATA COLOR_CONNECTIONS/N_CC_DEFINITION_ENTRIES*0/
      DATA COLOR_CONNECTION_INITIALIZED/.FALSE./
      COMMON/COLOR_CONNECTION_DEFINITIONS_NLO_1/COLOR_CONNECTIONS,
     $  COLOR_CONNECTION_INITIALIZED

C     NLO color connection ((3, -1, 3),) --> -1 T(301,103,3)
      COLOR_CONNECTIONS(3,-1)=1
C     NLO color connection ((4, -1, 4),) --> 1 T(301,4,104)
      COLOR_CONNECTIONS(4,-1)=2

      END SUBROUTINE

      SUBROUTINE COLOR_CONNECTION_TO_INDEX_NLO_1(SPECIFIER_A, INDEX_OUT)
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    PERT_ORDER
      PARAMETER (PERT_ORDER=1)
      INTEGER    CC_SPECIFIER_DIMENSION
      PARAMETER (CC_SPECIFIER_DIMENSION=2*PERT_ORDER)
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
C     
C     ARGUMENTS 
C     
      INTEGER SPECIFIER_A(3)
CF2PY INTENT(IN) :: SPECIFIER_A

      INTEGER INDEX_OUT
CF2PY INTENT(OUT) :: INDEX_OUT

C     
C     LOCAL VARIABLES
C     
      INTEGER I, J
      LOGICAL MATCHED
      INTEGER CC_SPECIFIER(CC_SPECIFIER_DIMENSION)
C     
C     GLOBAL VARIABLES
C     
      INTEGER COLOR_CONNECTIONS(NEXTERNAL,-PERT_ORDER:-1)
      LOGICAL COLOR_CONNECTION_INITIALIZED
      COMMON/COLOR_CONNECTION_DEFINITIONS_NLO_1/COLOR_CONNECTIONS,
     $  COLOR_CONNECTION_INITIALIZED

C     ----------
C     BEGIN CODE
C     ----------

      IF (.NOT.COLOR_CONNECTION_INITIALIZED) THEN
        COLOR_CONNECTION_INITIALIZED = .TRUE.
        CALL APPLY_COLOR_CONNECTION_DEFINITIONS_NLO_1()
      ENDIF

C     Set the cc_specifier
      CC_SPECIFIER(1)=SPECIFIER_A(1)
      CC_SPECIFIER(2)=SPECIFIER_A(2)

C     And return it now

      INDEX_OUT = COLOR_CONNECTIONS(CC_SPECIFIER(1),CC_SPECIFIER(2))

      END SUBROUTINE

      SUBROUTINE INDEX_TO_COLOR_CONNECTION_NLO_1(INDEX_IN,SPECIFIER_A)
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    PERT_ORDER
      PARAMETER (PERT_ORDER=1)
      INTEGER NCOLORCONNECTIONS_NLO
      PARAMETER (NCOLORCONNECTIONS_NLO=2)
      INTEGER INDEX_NLO_OFFSET
      PARAMETER (INDEX_NLO_OFFSET=0)

C     
C     ARGUMENTS 
C     
      INTEGER SPECIFIER_A(3)
CF2PY INTENT(OUT) :: SPECIFIER_A

      INTEGER INDEX_IN
CF2PY INTENT(IN) :: INDEX_IN

C     
C     LOCAL VARIABLES
C     
      INTEGER I, J, K
C     
C     GLOBAL VARIABLES
C     
      INTEGER CC_INDEX_TO_DEFINITION_NLO(NCOLORCONNECTIONS_NLO
     $ ,PERT_ORDER,3)
C     NLO color connection ((3, -1, 3),) --> -1 T(301,103,3)
      DATA (CC_INDEX_TO_DEFINITION_NLO(1,1,I),I=1,3)/3,-1,3/
C     NLO color connection ((4, -1, 4),) --> 1 T(301,4,104)
      DATA (CC_INDEX_TO_DEFINITION_NLO(2,1,I),I=1,3)/4,-1,4/
      COMMON/CC_INDEX_TO_DEFINITION_NLO_1/CC_INDEX_TO_DEFINITION_NLO

C     ----------
C     BEGIN CODE
C     ----------

C     Return the color connection for this index
      SPECIFIER_A(1)=CC_INDEX_TO_DEFINITION_NLO(INDEX_IN
     $ -INDEX_NLO_OFFSET,1,1)
      SPECIFIER_A(2)=CC_INDEX_TO_DEFINITION_NLO(INDEX_IN
     $ -INDEX_NLO_OFFSET,1,2)
      SPECIFIER_A(3)=CC_INDEX_TO_DEFINITION_NLO(INDEX_IN
     $ -INDEX_NLO_OFFSET,1,3)

      END SUBROUTINE

      FUNCTION GET_COLOR_CONNECTION_INDEX_NLO_1(SPECIFIER_A)
      IMPLICIT NONE
C     
C     ARGUMENTS 
C     
      INTEGER SPECIFIER_A(3)

      INTEGER GET_COLOR_CONNECTION_INDEX_NLO_1
C     
C     LOCAL VARIABLES
C     
      INTEGER CC_INDEX

C     ----------
C     BEGIN CODE
C     ----------

      CALL COLOR_CONNECTION_TO_INDEX_NLO_1(SPECIFIER_A, CC_INDEX)
      GET_COLOR_CONNECTION_INDEX_NLO_1 = CC_INDEX

      END FUNCTION GET_COLOR_CONNECTION_INDEX_NLO_1

C     =========================================================
C     Mapping of NNLO color connections to a unique index
C     =========================================================

      SUBROUTINE GET_N_COLOR_CONNECTIONS_NNLO_1(N_CC)
      IMPLICIT NONE
      INTEGER N_CC_FOR_THAT_ORDER
      PARAMETER (N_CC_FOR_THAT_ORDER=14)
      INTEGER N_CC
CF2PY INTENT(OUT) :: N_CC
      N_CC = N_CC_FOR_THAT_ORDER
      END SUBROUTINE

      SUBROUTINE APPLY_COLOR_CONNECTION_DEFINITIONS_NNLO_1()
C     This routine initialise the mapping of the color connections for
C      order NNLO

      INTEGER    PERT_ORDER
      PARAMETER (PERT_ORDER=2)
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
      INTEGER    N_CC_DEFINITION_ENTRIES
      PARAMETER (N_CC_DEFINITION_ENTRIES=NEXTERNAL*PERT_ORDER*
     $ (NEXTERNAL+PERT_ORDER+1)*(2*PERT_ORDER+1))

      INTEGER COLOR_CONNECTIONS(NEXTERNAL,-PERT_ORDER:-1,
     $ -PERT_ORDER:NEXTERNAL,-PERT_ORDER:PERT_ORDER)
      LOGICAL COLOR_CONNECTION_INITIALIZED
C     If the color connection doesn't exist, the index returned will
C      be zero
      DATA COLOR_CONNECTIONS/N_CC_DEFINITION_ENTRIES*0/
      DATA COLOR_CONNECTION_INITIALIZED/.FALSE./
      COMMON/COLOR_CONNECTION_DEFINITIONS_NNLO/COLOR_CONNECTIONS,
     $  COLOR_CONNECTION_INITIALIZED

C     NNLO color connection ((3, -2, 3), (-2, -2, -1)) --> -1
C      T(-100001,103,3) T(-100001,301,302)
      COLOR_CONNECTIONS(3,-2,-2,1)=3
C     NNLO color connection ((3, -2, 3), (-2, -1, -2)) --> -1 I
C      T(-100001,103,3) f(-100001,301,302)
      COLOR_CONNECTIONS(3,-2,-2,-1)=4
C     NNLO color connection ((3, -2, 3), (3, -1, 3)) --> 1
C      T(302,-100001,3) T(301,103,-100001)
      COLOR_CONNECTIONS(3,-2,3,-1)=5
C     NNLO color connection ((3, -1, 3), (-1, -2, -1)) --> -1 I
C      T(-100001,103,3) f(-100001,302,301)
      COLOR_CONNECTIONS(3,-1,-1,-2)=6
C     NNLO color connection ((3, -1, 3), (-1, -1, -2)) --> -1
C      T(-100001,103,3) T(-100001,302,301)
      COLOR_CONNECTIONS(3,-1,-1,2)=7
C     NNLO color connection ((3, -1, 3), (3, -2, 3)) --> 1
C      T(301,-100001,3) T(302,103,-100001)
      COLOR_CONNECTIONS(3,-1,3,-2)=8
C     NNLO color connection ((4, -2, 4), (-2, -2, -1)) --> 1
C      T(-100001,4,104) T(-100001,301,302)
      COLOR_CONNECTIONS(4,-2,-2,1)=9
C     NNLO color connection ((4, -2, 4), (-2, -1, -2)) --> 1 I
C      T(-100001,4,104) f(-100001,301,302)
      COLOR_CONNECTIONS(4,-2,-2,-1)=10
C     NNLO color connection ((4, -2, 4), (3, -1, 3)) --> -1
C      T(301,103,3) T(302,4,104)
      COLOR_CONNECTIONS(4,-2,3,-1)=11
C     NNLO color connection ((4, -2, 4), (4, -1, 4)) --> 1
C      T(302,4,-100001) T(301,-100001,104)
      COLOR_CONNECTIONS(4,-2,4,-1)=12
C     NNLO color connection ((4, -1, 4), (-1, -2, -1)) --> 1 I
C      T(-100001,4,104) f(-100001,302,301)
      COLOR_CONNECTIONS(4,-1,-1,-2)=13
C     NNLO color connection ((4, -1, 4), (-1, -1, -2)) --> 1
C      T(-100001,4,104) T(-100001,302,301)
      COLOR_CONNECTIONS(4,-1,-1,2)=14
C     NNLO color connection ((4, -1, 4), (3, -2, 3)) --> -1
C      T(301,4,104) T(302,103,3)
      COLOR_CONNECTIONS(4,-1,3,-2)=15
C     NNLO color connection ((4, -1, 4), (4, -2, 4)) --> 1
C      T(301,4,-100001) T(302,-100001,104)
      COLOR_CONNECTIONS(4,-1,4,-2)=16

      END SUBROUTINE

      SUBROUTINE COLOR_CONNECTION_TO_INDEX_NNLO_1(SPECIFIER_A
     $ ,SPECIFIER_B, INDEX_OUT)
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    PERT_ORDER
      PARAMETER (PERT_ORDER=2)
      INTEGER    CC_SPECIFIER_DIMENSION
      PARAMETER (CC_SPECIFIER_DIMENSION=2*PERT_ORDER)
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=4)
C     
C     ARGUMENTS 
C     
      INTEGER SPECIFIER_A(3)
      INTEGER SPECIFIER_B(3)
CF2PY INTENT(IN) :: SPECIFIER_A
CF2PY INTENT(IN) :: SPECIFIER_B

      INTEGER INDEX_OUT
CF2PY INTENT(OUT) :: INDEX_OUT

C     
C     LOCAL VARIABLES
C     
      INTEGER I, J
      LOGICAL MATCHED
      INTEGER CC_SPECIFIER(CC_SPECIFIER_DIMENSION)
C     
C     GLOBAL VARIABLES
C     
      INTEGER COLOR_CONNECTIONS(NEXTERNAL,-PERT_ORDER:-1,
     $ -PERT_ORDER:NEXTERNAL,-PERT_ORDER:PERT_ORDER)
      LOGICAL COLOR_CONNECTION_INITIALIZED
      COMMON/COLOR_CONNECTION_DEFINITIONS_NNLO/COLOR_CONNECTIONS,
     $  COLOR_CONNECTION_INITIALIZED

C     ----------
C     BEGIN CODE
C     ----------

      IF (.NOT.COLOR_CONNECTION_INITIALIZED) THEN
        COLOR_CONNECTION_INITIALIZED = .TRUE.
        CALL APPLY_COLOR_CONNECTION_DEFINITIONS_NNLO_1()
      ENDIF

C     Set the cc_specifier
      CC_SPECIFIER(1)=SPECIFIER_A(1)
      CC_SPECIFIER(2)=SPECIFIER_A(2)
      CC_SPECIFIER(3)=SPECIFIER_B(1)
      IF (SPECIFIER_B(2).NE.SPECIFIER_B(1)) THEN
        CC_SPECIFIER(4)=SPECIFIER_B(2)
      ELSE
        CC_SPECIFIER(4)=ABS(SPECIFIER_B(3))
      ENDIF

C     And return it now

      INDEX_OUT = COLOR_CONNECTIONS(CC_SPECIFIER(1),CC_SPECIFIER(2)
     $ ,CC_SPECIFIER(3),CC_SPECIFIER(4))

      END SUBROUTINE

      SUBROUTINE INDEX_TO_COLOR_CONNECTION_NNLO_1(INDEX_IN,SPECIFIER_A
     $ ,SPECIFIER_B)
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    PERT_ORDER
      PARAMETER (PERT_ORDER=2)
      INTEGER NCOLORCONNECTIONS_NNLO
      PARAMETER (NCOLORCONNECTIONS_NNLO=14)
      INTEGER INDEX_NNLO_OFFSET
      PARAMETER (INDEX_NNLO_OFFSET=2)

C     
C     ARGUMENTS 
C     
      INTEGER SPECIFIER_A(3)
      INTEGER SPECIFIER_B(3)
CF2PY INTENT(OUT) :: SPECIFIER_A
CF2PY INTENT(OUT) :: SPECIFIER_B

      INTEGER INDEX_IN
CF2PY INTENT(IN) :: INDEX_IN

C     
C     LOCAL VARIABLES
C     
      INTEGER I, J, K
C     
C     GLOBAL VARIABLES
C     
      INTEGER CC_INDEX_TO_DEFINITION_NNLO(NCOLORCONNECTIONS_NNLO
     $ ,PERT_ORDER,3)
C     NNLO color connection ((3, -2, 3), (-2, -2, -1)) --> -1
C      T(-100001,103,3) T(-100001,301,302)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(1,1,I),I=1,3)/3,-2,3/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(1,2,I),I=1,3)/-2,-2,-1/
C     NNLO color connection ((3, -2, 3), (-2, -1, -2)) --> -1 I
C      T(-100001,103,3) f(-100001,301,302)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(2,1,I),I=1,3)/3,-2,3/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(2,2,I),I=1,3)/-2,-1,-2/
C     NNLO color connection ((3, -2, 3), (3, -1, 3)) --> 1
C      T(302,-100001,3) T(301,103,-100001)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(3,1,I),I=1,3)/3,-2,3/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(3,2,I),I=1,3)/3,-1,3/
C     NNLO color connection ((3, -1, 3), (-1, -2, -1)) --> -1 I
C      T(-100001,103,3) f(-100001,302,301)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(4,1,I),I=1,3)/3,-1,3/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(4,2,I),I=1,3)/-1,-2,-1/
C     NNLO color connection ((3, -1, 3), (-1, -1, -2)) --> -1
C      T(-100001,103,3) T(-100001,302,301)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(5,1,I),I=1,3)/3,-1,3/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(5,2,I),I=1,3)/-1,-1,-2/
C     NNLO color connection ((3, -1, 3), (3, -2, 3)) --> 1
C      T(301,-100001,3) T(302,103,-100001)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(6,1,I),I=1,3)/3,-1,3/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(6,2,I),I=1,3)/3,-2,3/
C     NNLO color connection ((4, -2, 4), (-2, -2, -1)) --> 1
C      T(-100001,4,104) T(-100001,301,302)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(7,1,I),I=1,3)/4,-2,4/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(7,2,I),I=1,3)/-2,-2,-1/
C     NNLO color connection ((4, -2, 4), (-2, -1, -2)) --> 1 I
C      T(-100001,4,104) f(-100001,301,302)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(8,1,I),I=1,3)/4,-2,4/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(8,2,I),I=1,3)/-2,-1,-2/
C     NNLO color connection ((4, -2, 4), (3, -1, 3)) --> -1
C      T(301,103,3) T(302,4,104)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(9,1,I),I=1,3)/4,-2,4/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(9,2,I),I=1,3)/3,-1,3/
C     NNLO color connection ((4, -2, 4), (4, -1, 4)) --> 1
C      T(302,4,-100001) T(301,-100001,104)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(10,1,I),I=1,3)/4,-2,4/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(10,2,I),I=1,3)/4,-1,4/
C     NNLO color connection ((4, -1, 4), (-1, -2, -1)) --> 1 I
C      T(-100001,4,104) f(-100001,302,301)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(11,1,I),I=1,3)/4,-1,4/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(11,2,I),I=1,3)/-1,-2,-1/
C     NNLO color connection ((4, -1, 4), (-1, -1, -2)) --> 1
C      T(-100001,4,104) T(-100001,302,301)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(12,1,I),I=1,3)/4,-1,4/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(12,2,I),I=1,3)/-1,-1,-2/
C     NNLO color connection ((4, -1, 4), (3, -2, 3)) --> -1
C      T(301,4,104) T(302,103,3)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(13,1,I),I=1,3)/4,-1,4/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(13,2,I),I=1,3)/3,-2,3/
C     NNLO color connection ((4, -1, 4), (4, -2, 4)) --> 1
C      T(301,4,-100001) T(302,-100001,104)
      DATA (CC_INDEX_TO_DEFINITION_NNLO(14,1,I),I=1,3)/4,-1,4/
      DATA (CC_INDEX_TO_DEFINITION_NNLO(14,2,I),I=1,3)/4,-2,4/
      COMMON/CC_INDEX_TO_DEFINITION_NNLO/CC_INDEX_TO_DEFINITION_NNLO

C     ----------
C     BEGIN CODE
C     ----------

C     Return the color connection for this index
      SPECIFIER_A(1)=CC_INDEX_TO_DEFINITION_NNLO(INDEX_IN
     $ -INDEX_NNLO_OFFSET,1,1)
      SPECIFIER_A(2)=CC_INDEX_TO_DEFINITION_NNLO(INDEX_IN
     $ -INDEX_NNLO_OFFSET,1,2)
      SPECIFIER_A(3)=CC_INDEX_TO_DEFINITION_NNLO(INDEX_IN
     $ -INDEX_NNLO_OFFSET,1,3)
      SPECIFIER_B(1)=CC_INDEX_TO_DEFINITION_NNLO(INDEX_IN
     $ -INDEX_NNLO_OFFSET,2,1)
      SPECIFIER_B(2)=CC_INDEX_TO_DEFINITION_NNLO(INDEX_IN
     $ -INDEX_NNLO_OFFSET,2,2)
      SPECIFIER_B(3)=CC_INDEX_TO_DEFINITION_NNLO(INDEX_IN
     $ -INDEX_NNLO_OFFSET,2,3)

      END SUBROUTINE

      FUNCTION GET_COLOR_CONNECTION_INDEX_NNLO_1(SPECIFIER_A,SPECIFIER_B)
      IMPLICIT NONE
C     
C     ARGUMENTS 
C     
      INTEGER SPECIFIER_A(3)
      INTEGER SPECIFIER_B(3)

      INTEGER GET_COLOR_CONNECTION_INDEX_NNLO_1
C     
C     LOCAL VARIABLES
C     
      INTEGER CC_INDEX

C     ----------
C     BEGIN CODE
C     ----------

      CALL COLOR_CONNECTION_TO_INDEX_NNLO_1(SPECIFIER_A,SPECIFIER_B,
     $  CC_INDEX)
      GET_COLOR_CONNECTION_INDEX_NNLO_1 = CC_INDEX

      END FUNCTION GET_COLOR_CONNECTION_INDEX_NNLO_1



C     Set of functions to handle the array indices of the split orders


      INTEGER FUNCTION SQSOINDEX_1(ORDERINDEXA, ORDERINDEXB)
C     
C     This functions plays the role of the interference matrix. It can
C      be hardcoded or 
C     made more elegant using hashtables if its execution speed ever
C      becomes a relevant
C     factor. From two split order indices, it return the
C      corresponding index in the squared 
C     order canonical ordering.
C     
C     CONSTANTS
C     

      INTEGER    NSO, NSQUAREDSO, NAMPSO
      PARAMETER (NSO=2, NSQUAREDSO=1, NAMPSO=1)
C     
C     ARGUMENTS
C     
      INTEGER ORDERINDEXA, ORDERINDEXB
C     
C     LOCAL VARIABLES
C     
      INTEGER I, SQORDERS(NSO)
      INTEGER AMPSPLITORDERS(NAMPSO,NSO)
      DATA (AMPSPLITORDERS(  1,I),I=  1,  2) /    0,    2/
      COMMON/AMPSPLITORDERS_1/AMPSPLITORDERS
C     
C     FUNCTION
C     
      INTEGER SOINDEX_FOR_SQUARED_ORDERS_1
C     
C     BEGIN CODE
C     
      DO I=1,NSO
        SQORDERS(I)=AMPSPLITORDERS(ORDERINDEXA,I)+AMPSPLITORDERS
     $   (ORDERINDEXB,I)
      ENDDO
      SQSOINDEX_1=SOINDEX_FOR_SQUARED_ORDERS_1(SQORDERS)
      END

      INTEGER FUNCTION SOINDEX_FOR_SQUARED_ORDERS_1(ORDERS)
C     
C     This functions returns the integer index identifying the squared
C      split orders list passed in argument which corresponds to the
C      values of the following list of couplings (and in this order).
C     ['QCD', 'QED']
C     
C     CONSTANTS
C     
      INTEGER    NSO, NSQSO, NAMPSO
      PARAMETER (NSO=2, NSQSO=1, NAMPSO=1)
C     
C     ARGUMENTS
C     
      INTEGER ORDERS(NSO)
C     
C     LOCAL VARIABLES
C     
      INTEGER I,J
      INTEGER SQSPLITORDERS(NSQSO,NSO)
      DATA (SQSPLITORDERS(  1,I),I=  1,  2) /    0,    4/
      COMMON/ALL_SQSPLITORDERS_1/SQSPLITORDERS
C     
C     BEGIN CODE
C     
      DO I=1,NSQSO
        DO J=1,NSO
          IF (ORDERS(J).NE.SQSPLITORDERS(I,J)) GOTO 1009
        ENDDO
        SOINDEX_FOR_SQUARED_ORDERS_1 = I
        RETURN
 1009   CONTINUE
      ENDDO

      WRITE(*,*) 'ERROR:: Stopping in function'
      WRITE(*,*) 'SOINDEX_FOR_SQUARED_ORDERS_1'
      WRITE(*,*) 'Could not find squared orders ',(ORDERS(I),I=1,NSO)
      STOP

      END

      SUBROUTINE GET_NSQSO_BORN_1(NSQSO)
C     
C     Simple subroutine returning the number of squared split order
C     contributions returned when calling smatrix_split_orders 
C     

      INTEGER    NSQUAREDSO
      PARAMETER  (NSQUAREDSO=1)

      INTEGER NSQSO
CF2PY INTENT(OUT) :: NSQSO

      NSQSO=NSQUAREDSO

      END

C     This is the inverse subroutine of SOINDEX_FOR_SQUARED_ORDERS_1.
C      Not directly useful, but provided nonetheless.
      SUBROUTINE GET_SQUARED_ORDERS_FOR_SOINDEX_1(SOINDEX,ORDERS)
C     
C     This functions returns the orders identified by the squared
C      split order index in argument. Order values correspond to
C      following list of couplings (and in this order):
C     ['QCD', 'QED']
C     
C     CONSTANTS
C     
      INTEGER    NSO, NSQSO
      PARAMETER (NSO=2, NSQSO=1)
C     
C     ARGUMENTS
C     
      INTEGER SOINDEX, ORDERS(NSO)
CF2PY INTENT(IN) :: SOINDEX
CF2PY INTENT(OUT) :: ORDERS
C     
C     LOCAL VARIABLES
C     
      INTEGER I
      INTEGER SQSPLITORDERS(NSQSO,NSO)
      COMMON/ALL_SQSPLITORDERS_1/SQSPLITORDERS
C     
C     BEGIN CODE
C     
      IF (SOINDEX.GT.0.AND.SOINDEX.LE.NSQSO) THEN
        DO I=1,NSO
          ORDERS(I) =  SQSPLITORDERS(SOINDEX,I)
        ENDDO
        RETURN
      ENDIF

      WRITE(*,*) 'ERROR:: Stopping function GET_SQUARED_ORDERS_FOR_SOIN'
     $ //'DEX'
      WRITE(*,*) 'Could not find squared orders index ',SOINDEX
      STOP

      END SUBROUTINE

C     This is the inverse subroutine of getting amplitude SO orders.
C      Not directly useful, but provided nonetheless.
      SUBROUTINE GET_ORDERS_FOR_AMPSOINDEX_1(SOINDEX,ORDERS)
C     
C     This functions returns the orders identified by the split order
C      index in argument. Order values correspond to following list of
C      couplings (and in this order):
C     ['QCD', 'QED']
C     
C     CONSTANTS
C     
      INTEGER    NSO, NAMPSO
      PARAMETER (NSO=2, NAMPSO=1)
C     
C     ARGUMENTS
C     
      INTEGER SOINDEX, ORDERS(NSO)
C     
C     LOCAL VARIABLES
C     
      INTEGER I
      INTEGER AMPSPLITORDERS(NAMPSO,NSO)
      COMMON/AMPSPLITORDERS_1/AMPSPLITORDERS
C     
C     BEGIN CODE
C     
      IF (SOINDEX.GT.0.AND.SOINDEX.LE.NAMPSO) THEN
        DO I=1,NSO
          ORDERS(I) =  AMPSPLITORDERS(SOINDEX,I)
        ENDDO
        RETURN
      ENDIF

      WRITE(*,*) 'ERROR:: Stopping function GET_ORDERS_FOR_AMPSOINDEX'
      WRITE(*,*) 'Could not find amplitude split orders index ',SOINDEX
      STOP

      END SUBROUTINE

C     This function is not directly useful, but included for
C      completeness
      INTEGER FUNCTION SOINDEX_FOR_AMPORDERS_1(ORDERS)
C     
C     This functions returns the integer index identifying the
C      amplitude split orders passed in argument which correspond to
C      the values of the following list of couplings (and in this
C      order):
C     ['QCD', 'QED']
C     
C     CONSTANTS
C     
      INTEGER    NSO, NAMPSO
      PARAMETER (NSO=2, NAMPSO=1)
C     
C     ARGUMENTS
C     
      INTEGER ORDERS(NSO)
C     
C     LOCAL VARIABLES
C     
      INTEGER I,J
      INTEGER AMPSPLITORDERS(NAMPSO,NSO)
      COMMON/AMPSPLITORDERS_1/AMPSPLITORDERS
C     
C     BEGIN CODE
C     
      DO I=1,NAMPSO
        DO J=1,NSO
          IF (ORDERS(J).NE.AMPSPLITORDERS(I,J)) GOTO 1009
        ENDDO
        SOINDEX_FOR_AMPORDERS_1 = I
        RETURN
 1009   CONTINUE
      ENDDO

      WRITE(*,*) 'ERROR:: Stopping function SOINDEX_FOR_AMPORDERS_1'
      WRITE(*,*) 'Could not find squared orders ',(ORDERS(I),I=1,NSO)
      STOP

      END

C     --------
C     Now defining F2PY hooks.
C     --------

      SUBROUTINE GET_SPLIT_ORDER_NAMES_1(SONAMES)
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NSO
      PARAMETER (NSO=2)
C     ARGUMENTS
C     
      CHARACTER*100 SONAMES(NSO)
      INTEGER IDX
CF2PY INTENT(OUT) :: SONAMES
C     
C     BEGIN CODE
C     
      SONAMES(1)='QCD'
      SONAMES(2)='QED'

      END


